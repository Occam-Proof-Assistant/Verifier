"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return verifyConditionalIndicative;
    }
});
var _consequent = /*#__PURE__*/ _interopRequireDefault(require("../verify/consequent"));
var _antecedentOrAntecedents = /*#__PURE__*/ _interopRequireDefault(require("../verify/antecedentOrAntecedents"));
var _query = require("../utilities/query");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var consequentNodeQuery = (0, _query.nodeQuery)("/conditionalIndicative/consequent!"), antecedentOrAntecedentsNodeQuery = (0, _query.nodeQuery)("/conditionalIndicative/antecedent|antecedents!");
function verifyConditionalIndicative(conditionalIndicativeNode, antecedents, consequents, proofContext) {
    var conditionalIndicativeVerified = false;
    proofContext.begin(conditionalIndicativeNode);
    var consequentNode = consequentNodeQuery(conditionalIndicativeNode), antecedentOrAntecedentsNode = antecedentOrAntecedentsNodeQuery(conditionalIndicativeNode), antecedentOrAntecedentsVerified = (0, _antecedentOrAntecedents.default)(antecedentOrAntecedentsNode, antecedents, proofContext);
    if (antecedentOrAntecedentsVerified) {
        var consequentVerified = (0, _consequent.default)(consequentNode, consequents, proofContext);
        conditionalIndicativeVerified = consequentVerified; ///
    }
    conditionalIndicativeVerified ? proofContext.complete(conditionalIndicativeNode) : proofContext.halt(conditionalIndicativeNode);
    return conditionalIndicativeVerified;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy92ZXJpZnkvY29uZGl0aW5hbEluZGljYXRpdmUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB2ZXJpZnlDb25zZXF1ZW50IGZyb20gXCIuLi92ZXJpZnkvY29uc2VxdWVudFwiO1xuaW1wb3J0IHZlcmlmeUFudGVjZWRlbnRPckFudGVjZWRlbnRzIGZyb20gXCIuLi92ZXJpZnkvYW50ZWNlZGVudE9yQW50ZWNlZGVudHNcIjtcblxuaW1wb3J0IHsgbm9kZVF1ZXJ5IH0gZnJvbSBcIi4uL3V0aWxpdGllcy9xdWVyeVwiO1xuXG5jb25zdCBjb25zZXF1ZW50Tm9kZVF1ZXJ5ID0gbm9kZVF1ZXJ5KFwiL2NvbmRpdGlvbmFsSW5kaWNhdGl2ZS9jb25zZXF1ZW50IVwiKSxcbiAgICAgIGFudGVjZWRlbnRPckFudGVjZWRlbnRzTm9kZVF1ZXJ5ID0gbm9kZVF1ZXJ5KFwiL2NvbmRpdGlvbmFsSW5kaWNhdGl2ZS9hbnRlY2VkZW50fGFudGVjZWRlbnRzIVwiKTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdmVyaWZ5Q29uZGl0aW9uYWxJbmRpY2F0aXZlKGNvbmRpdGlvbmFsSW5kaWNhdGl2ZU5vZGUsIGFudGVjZWRlbnRzLCBjb25zZXF1ZW50cywgcHJvb2ZDb250ZXh0KSB7XG4gIGxldCBjb25kaXRpb25hbEluZGljYXRpdmVWZXJpZmllZCA9IGZhbHNlO1xuXG4gIHByb29mQ29udGV4dC5iZWdpbihjb25kaXRpb25hbEluZGljYXRpdmVOb2RlKTtcblxuICBjb25zdCBjb25zZXF1ZW50Tm9kZSA9IGNvbnNlcXVlbnROb2RlUXVlcnkoY29uZGl0aW9uYWxJbmRpY2F0aXZlTm9kZSksXG4gICAgICAgIGFudGVjZWRlbnRPckFudGVjZWRlbnRzTm9kZSA9IGFudGVjZWRlbnRPckFudGVjZWRlbnRzTm9kZVF1ZXJ5KGNvbmRpdGlvbmFsSW5kaWNhdGl2ZU5vZGUpLFxuICAgICAgICBhbnRlY2VkZW50T3JBbnRlY2VkZW50c1ZlcmlmaWVkID0gdmVyaWZ5QW50ZWNlZGVudE9yQW50ZWNlZGVudHMoYW50ZWNlZGVudE9yQW50ZWNlZGVudHNOb2RlLCBhbnRlY2VkZW50cywgcHJvb2ZDb250ZXh0KTtcblxuICBpZiAoYW50ZWNlZGVudE9yQW50ZWNlZGVudHNWZXJpZmllZCkge1xuICAgIGNvbnN0IGNvbnNlcXVlbnRWZXJpZmllZCA9IHZlcmlmeUNvbnNlcXVlbnQoY29uc2VxdWVudE5vZGUsIGNvbnNlcXVlbnRzLCBwcm9vZkNvbnRleHQpO1xuXG4gICAgY29uZGl0aW9uYWxJbmRpY2F0aXZlVmVyaWZpZWQgPSBjb25zZXF1ZW50VmVyaWZpZWQ7ICAvLy9cbiAgfVxuXG4gIGNvbmRpdGlvbmFsSW5kaWNhdGl2ZVZlcmlmaWVkID9cbiAgICBwcm9vZkNvbnRleHQuY29tcGxldGUoY29uZGl0aW9uYWxJbmRpY2F0aXZlTm9kZSkgOlxuICAgICAgcHJvb2ZDb250ZXh0LmhhbHQoY29uZGl0aW9uYWxJbmRpY2F0aXZlTm9kZSk7XG5cbiAgcmV0dXJuIGNvbmRpdGlvbmFsSW5kaWNhdGl2ZVZlcmlmaWVkO1xufVxuIl0sIm5hbWVzIjpbInZlcmlmeUNvbmRpdGlvbmFsSW5kaWNhdGl2ZSIsImNvbnNlcXVlbnROb2RlUXVlcnkiLCJub2RlUXVlcnkiLCJhbnRlY2VkZW50T3JBbnRlY2VkZW50c05vZGVRdWVyeSIsImNvbmRpdGlvbmFsSW5kaWNhdGl2ZU5vZGUiLCJhbnRlY2VkZW50cyIsImNvbnNlcXVlbnRzIiwicHJvb2ZDb250ZXh0IiwiY29uZGl0aW9uYWxJbmRpY2F0aXZlVmVyaWZpZWQiLCJiZWdpbiIsImNvbnNlcXVlbnROb2RlIiwiYW50ZWNlZGVudE9yQW50ZWNlZGVudHNOb2RlIiwiYW50ZWNlZGVudE9yQW50ZWNlZGVudHNWZXJpZmllZCIsInZlcmlmeUFudGVjZWRlbnRPckFudGVjZWRlbnRzIiwiY29uc2VxdWVudFZlcmlmaWVkIiwidmVyaWZ5Q29uc2VxdWVudCIsImNvbXBsZXRlIiwiaGFsdCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7K0JBVUE7OztlQUF3QkE7OzsrREFSSzs0RUFDYTtxQkFFaEI7Ozs7OztBQUUxQixJQUFNQyxzQkFBc0JDLElBQUFBLGdCQUFTLEVBQUMsdUNBQ2hDQyxtQ0FBbUNELElBQUFBLGdCQUFTLEVBQUM7QUFFcEMsU0FBU0YsNEJBQTRCSSx5QkFBeUIsRUFBRUMsV0FBVyxFQUFFQyxXQUFXLEVBQUVDLFlBQVksRUFBRTtJQUNySCxJQUFJQyxnQ0FBZ0MsS0FBSztJQUV6Q0QsYUFBYUUsS0FBSyxDQUFDTDtJQUVuQixJQUFNTSxpQkFBaUJULG9CQUFvQkcsNEJBQ3JDTyw4QkFBOEJSLGlDQUFpQ0MsNEJBQy9EUSxrQ0FBa0NDLElBQUFBLGdDQUE2QixFQUFDRiw2QkFBNkJOLGFBQWFFO0lBRWhILElBQUlLLGlDQUFpQztRQUNuQyxJQUFNRSxxQkFBcUJDLElBQUFBLG1CQUFnQixFQUFDTCxnQkFBZ0JKLGFBQWFDO1FBRXpFQyxnQ0FBZ0NNLG9CQUFxQixHQUFHO0lBQzFELENBQUM7SUFFRE4sZ0NBQ0VELGFBQWFTLFFBQVEsQ0FBQ1osNkJBQ3BCRyxhQUFhVSxJQUFJLENBQUNiLDBCQUEwQjtJQUVoRCxPQUFPSTtBQUNUIn0=