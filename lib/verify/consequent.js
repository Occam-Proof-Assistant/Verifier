"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return verifyConsequent;
    }
});
var _consequent = /*#__PURE__*/ _interopRequireDefault(require("../consequent"));
var _unqualified = /*#__PURE__*/ _interopRequireDefault(require("../verify/statement/unqualified"));
var _query = require("../utilities/query");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var statementNodeQuery = (0, _query.nodeQuery)("/*/statement!"), unqualifiedStatementNodeQuery = (0, _query.nodeQuery)("/consequent/unqualifiedStatement!");
function verifyConsequent(consequentNode, consequents, proofContext) {
    var consequentVerified = false;
    proofContext.begin(consequentNode);
    var unqualifiedStatementNode = unqualifiedStatementNodeQuery(consequentNode), unqualifiedStatementVerified = (0, _unqualified.default)(unqualifiedStatementNode, proofContext);
    if (unqualifiedStatementVerified) {
        var statementNode = statementNodeQuery(unqualifiedStatementNode), consequent = _consequent.default.fromStatementNode(statementNode);
        consequents.push(consequent);
        consequentVerified = true;
    }
    consequentVerified ? proofContext.complete(consequentNode) : proofContext.halt(consequentNode);
    return consequentVerified;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy92ZXJpZnkvY29uc2VxdWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IENvbnNlcXVlbnQgZnJvbSBcIi4uL2NvbnNlcXVlbnRcIjtcbmltcG9ydCB2ZXJpZnlVbnF1YWxpZmllZFN0YXRlbWVudCBmcm9tIFwiLi4vdmVyaWZ5L3N0YXRlbWVudC91bnF1YWxpZmllZFwiO1xuXG5pbXBvcnQgeyBub2RlUXVlcnkgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL3F1ZXJ5XCI7XG5cbmNvbnN0IHN0YXRlbWVudE5vZGVRdWVyeSA9IG5vZGVRdWVyeShcIi8qL3N0YXRlbWVudCFcIiksXG4gICAgICB1bnF1YWxpZmllZFN0YXRlbWVudE5vZGVRdWVyeSA9IG5vZGVRdWVyeShcIi9jb25zZXF1ZW50L3VucXVhbGlmaWVkU3RhdGVtZW50IVwiKTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdmVyaWZ5Q29uc2VxdWVudChjb25zZXF1ZW50Tm9kZSwgY29uc2VxdWVudHMsIHByb29mQ29udGV4dCkge1xuICBsZXQgY29uc2VxdWVudFZlcmlmaWVkID0gZmFsc2U7XG5cbiAgcHJvb2ZDb250ZXh0LmJlZ2luKGNvbnNlcXVlbnROb2RlKTtcblxuICBjb25zdCB1bnF1YWxpZmllZFN0YXRlbWVudE5vZGUgPSB1bnF1YWxpZmllZFN0YXRlbWVudE5vZGVRdWVyeShjb25zZXF1ZW50Tm9kZSksXG4gICAgICAgIHVucXVhbGlmaWVkU3RhdGVtZW50VmVyaWZpZWQgPSB2ZXJpZnlVbnF1YWxpZmllZFN0YXRlbWVudCh1bnF1YWxpZmllZFN0YXRlbWVudE5vZGUsIHByb29mQ29udGV4dCk7XG5cbiAgaWYgKHVucXVhbGlmaWVkU3RhdGVtZW50VmVyaWZpZWQpIHtcbiAgICBjb25zdCBzdGF0ZW1lbnROb2RlID0gc3RhdGVtZW50Tm9kZVF1ZXJ5KHVucXVhbGlmaWVkU3RhdGVtZW50Tm9kZSksXG4gICAgICAgICAgY29uc2VxdWVudCA9IENvbnNlcXVlbnQuZnJvbVN0YXRlbWVudE5vZGUoc3RhdGVtZW50Tm9kZSk7XG5cbiAgICBjb25zZXF1ZW50cy5wdXNoKGNvbnNlcXVlbnQpO1xuXG4gICAgY29uc2VxdWVudFZlcmlmaWVkID0gdHJ1ZTtcbiAgfVxuXG4gIGNvbnNlcXVlbnRWZXJpZmllZCA/XG4gICAgcHJvb2ZDb250ZXh0LmNvbXBsZXRlKGNvbnNlcXVlbnROb2RlKSA6XG4gICAgICBwcm9vZkNvbnRleHQuaGFsdChjb25zZXF1ZW50Tm9kZSk7XG5cbiAgcmV0dXJuIGNvbnNlcXVlbnRWZXJpZmllZDtcbn1cbiJdLCJuYW1lcyI6WyJ2ZXJpZnlDb25zZXF1ZW50Iiwic3RhdGVtZW50Tm9kZVF1ZXJ5Iiwibm9kZVF1ZXJ5IiwidW5xdWFsaWZpZWRTdGF0ZW1lbnROb2RlUXVlcnkiLCJjb25zZXF1ZW50Tm9kZSIsImNvbnNlcXVlbnRzIiwicHJvb2ZDb250ZXh0IiwiY29uc2VxdWVudFZlcmlmaWVkIiwiYmVnaW4iLCJ1bnF1YWxpZmllZFN0YXRlbWVudE5vZGUiLCJ1bnF1YWxpZmllZFN0YXRlbWVudFZlcmlmaWVkIiwidmVyaWZ5VW5xdWFsaWZpZWRTdGF0ZW1lbnQiLCJzdGF0ZW1lbnROb2RlIiwiY29uc2VxdWVudCIsIkNvbnNlcXVlbnQiLCJmcm9tU3RhdGVtZW50Tm9kZSIsInB1c2giLCJjb21wbGV0ZSIsImhhbHQiXSwibWFwcGluZ3MiOiJBQUFBOzs7OytCQVVBOzs7ZUFBd0JBOzs7K0RBUkQ7Z0VBQ2dCO3FCQUViOzs7Ozs7QUFFMUIsSUFBTUMscUJBQXFCQyxJQUFBQSxnQkFBUyxFQUFDLGtCQUMvQkMsZ0NBQWdDRCxJQUFBQSxnQkFBUyxFQUFDO0FBRWpDLFNBQVNGLGlCQUFpQkksY0FBYyxFQUFFQyxXQUFXLEVBQUVDLFlBQVksRUFBRTtJQUNsRixJQUFJQyxxQkFBcUIsS0FBSztJQUU5QkQsYUFBYUUsS0FBSyxDQUFDSjtJQUVuQixJQUFNSywyQkFBMkJOLDhCQUE4QkMsaUJBQ3pETSwrQkFBK0JDLElBQUFBLG9CQUEwQixFQUFDRiwwQkFBMEJIO0lBRTFGLElBQUlJLDhCQUE4QjtRQUNoQyxJQUFNRSxnQkFBZ0JYLG1CQUFtQlEsMkJBQ25DSSxhQUFhQyxtQkFBVSxDQUFDQyxpQkFBaUIsQ0FBQ0g7UUFFaERQLFlBQVlXLElBQUksQ0FBQ0g7UUFFakJOLHFCQUFxQixJQUFJO0lBQzNCLENBQUM7SUFFREEscUJBQ0VELGFBQWFXLFFBQVEsQ0FBQ2Isa0JBQ3BCRSxhQUFhWSxJQUFJLENBQUNkLGVBQWU7SUFFckMsT0FBT0c7QUFDVCJ9