"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return verifyMetaSubDerivation;
    }
});
var _query = require("../utilities/query");
var metaproofStepNodesQuery = (0, _query.nodesQuery)("/metaSubDerivation/metaproofStep|lastMetaproofStep");
function verifyMetaSubDerivation(metaSubDerivationNode, substitutions, localContext) {
    var metaSubDerivationVerified;
    var metaproofStepNodes = metaproofStepNodesQuery(metaSubDerivationNode);
    metaSubDerivationVerified = metaproofStepNodes.every(function(metaproofStepNode) {
        var verifyMetaproofStep = verifyMetaSubDerivation.verifyMetaproofStep, metaproofStepVerified = verifyMetaproofStep(metaproofStepNode, substitutions, localContext);
        if (metaproofStepVerified) {
            return true;
        }
    });
    return metaSubDerivationVerified;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy92ZXJpZnkvbWV0YVN1YkRlcml2YXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IG5vZGVzUXVlcnkgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL3F1ZXJ5XCI7XG5cbmNvbnN0IG1ldGFwcm9vZlN0ZXBOb2Rlc1F1ZXJ5ID0gbm9kZXNRdWVyeShcIi9tZXRhU3ViRGVyaXZhdGlvbi9tZXRhcHJvb2ZTdGVwfGxhc3RNZXRhcHJvb2ZTdGVwXCIpO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB2ZXJpZnlNZXRhU3ViRGVyaXZhdGlvbihtZXRhU3ViRGVyaXZhdGlvbk5vZGUsIHN1YnN0aXR1dGlvbnMsIGxvY2FsQ29udGV4dCkge1xuICBsZXQgbWV0YVN1YkRlcml2YXRpb25WZXJpZmllZDtcblxuICBjb25zdCBtZXRhcHJvb2ZTdGVwTm9kZXMgPSBtZXRhcHJvb2ZTdGVwTm9kZXNRdWVyeShtZXRhU3ViRGVyaXZhdGlvbk5vZGUpO1xuXG4gIG1ldGFTdWJEZXJpdmF0aW9uVmVyaWZpZWQgPSBtZXRhcHJvb2ZTdGVwTm9kZXMuZXZlcnkoKG1ldGFwcm9vZlN0ZXBOb2RlKSA9PiB7XG4gICAgY29uc3QgeyB2ZXJpZnlNZXRhcHJvb2ZTdGVwIH0gPSB2ZXJpZnlNZXRhU3ViRGVyaXZhdGlvbixcbiAgICAgICAgICBtZXRhcHJvb2ZTdGVwVmVyaWZpZWQgPSB2ZXJpZnlNZXRhcHJvb2ZTdGVwKG1ldGFwcm9vZlN0ZXBOb2RlLCBzdWJzdGl0dXRpb25zLCBsb2NhbENvbnRleHQpO1xuXG4gICAgaWYgKG1ldGFwcm9vZlN0ZXBWZXJpZmllZCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gbWV0YVN1YkRlcml2YXRpb25WZXJpZmllZDtcbn1cbiJdLCJuYW1lcyI6WyJ2ZXJpZnlNZXRhU3ViRGVyaXZhdGlvbiIsIm1ldGFwcm9vZlN0ZXBOb2Rlc1F1ZXJ5Iiwibm9kZXNRdWVyeSIsIm1ldGFTdWJEZXJpdmF0aW9uTm9kZSIsInN1YnN0aXR1dGlvbnMiLCJsb2NhbENvbnRleHQiLCJtZXRhU3ViRGVyaXZhdGlvblZlcmlmaWVkIiwibWV0YXByb29mU3RlcE5vZGVzIiwiZXZlcnkiLCJtZXRhcHJvb2ZTdGVwTm9kZSIsInZlcmlmeU1ldGFwcm9vZlN0ZXAiLCJtZXRhcHJvb2ZTdGVwVmVyaWZpZWQiXSwibWFwcGluZ3MiOiJBQUFBOzs7OytCQU1BOzs7ZUFBd0JBOzs7cUJBSkc7QUFFM0IsSUFBTUMsMEJBQTBCQyxJQUFBQSxpQkFBVSxFQUFDO0FBRTVCLFNBQVNGLHdCQUF3QkcscUJBQXFCLEVBQUVDLGFBQWEsRUFBRUMsWUFBWTtJQUNoRyxJQUFJQztJQUVKLElBQU1DLHFCQUFxQk4sd0JBQXdCRTtJQUVuREcsNEJBQTRCQyxtQkFBbUJDLEtBQUssQ0FBQyxTQUFDQztRQUNwRCxJQUFNLEFBQUVDLHNCQUF3QlYsd0JBQXhCVSxxQkFDRkMsd0JBQXdCRCxvQkFBb0JELG1CQUFtQkwsZUFBZUM7UUFFcEYsSUFBSU0sdUJBQXVCO1lBQ3pCLE9BQU87UUFDVDtJQUNGO0lBRUEsT0FBT0w7QUFDVCJ9