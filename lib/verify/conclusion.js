"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return verifyConclusion;
    }
});
var _conclusion = /*#__PURE__*/ _interopRequireDefault(require("../conclusion"));
var _query = require("../utilities/query");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var metastatementNodeQuery = (0, _query.nodeQuery)("/*/metastatement!"), unqualifiedMetastatementNodeQuery = (0, _query.nodeQuery)("/conclusion/unqualifiedMetastatement!");
function verifyConclusion(conclusionNode, conclusions) {
    var context = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this;
    var conclusionVerified = false;
    context.begin(conclusionNode);
    var unqualifiedMetastatementNode = unqualifiedMetastatementNodeQuery(conclusionNode);
    if (unqualifiedMetastatementNode !== null) {
        var unqualifiedMetastatementVerified = context.verifyUnqualifiedMetastatement(unqualifiedMetastatementNode);
        if (unqualifiedMetastatementVerified) {
            var metastatementNode = metastatementNodeQuery(unqualifiedMetastatementNode), conclusion = _conclusion.default.fromMetastatementNode(metastatementNode);
            conclusions.push(conclusion);
            conclusionVerified = true;
        }
    }
    conclusionVerified ? context.complete(conclusionNode) : context.halt(conclusionNode);
    return conclusionVerified;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy92ZXJpZnkvY29uY2x1c2lvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IENvbmNsdXNpb24gZnJvbSBcIi4uL2NvbmNsdXNpb25cIjtcblxuaW1wb3J0IHsgbm9kZVF1ZXJ5IH0gZnJvbSBcIi4uL3V0aWxpdGllcy9xdWVyeVwiO1xuXG5jb25zdCBtZXRhc3RhdGVtZW50Tm9kZVF1ZXJ5ID0gbm9kZVF1ZXJ5KFwiLyovbWV0YXN0YXRlbWVudCFcIiksXG4gICAgICB1bnF1YWxpZmllZE1ldGFzdGF0ZW1lbnROb2RlUXVlcnkgPSBub2RlUXVlcnkoXCIvY29uY2x1c2lvbi91bnF1YWxpZmllZE1ldGFzdGF0ZW1lbnQhXCIpO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB2ZXJpZnlDb25jbHVzaW9uKGNvbmNsdXNpb25Ob2RlLCBjb25jbHVzaW9ucywgY29udGV4dCA9IHRoaXMpIHtcbiAgbGV0IGNvbmNsdXNpb25WZXJpZmllZCA9IGZhbHNlO1xuXG4gIGNvbnRleHQuYmVnaW4oY29uY2x1c2lvbk5vZGUpO1xuXG4gIGNvbnN0IHVucXVhbGlmaWVkTWV0YXN0YXRlbWVudE5vZGUgPSB1bnF1YWxpZmllZE1ldGFzdGF0ZW1lbnROb2RlUXVlcnkoY29uY2x1c2lvbk5vZGUpO1xuXG4gIGlmICh1bnF1YWxpZmllZE1ldGFzdGF0ZW1lbnROb2RlICE9PSBudWxsKSB7XG4gICAgY29uc3QgdW5xdWFsaWZpZWRNZXRhc3RhdGVtZW50VmVyaWZpZWQgPSBjb250ZXh0LnZlcmlmeVVucXVhbGlmaWVkTWV0YXN0YXRlbWVudCh1bnF1YWxpZmllZE1ldGFzdGF0ZW1lbnROb2RlKTtcblxuICAgIGlmICh1bnF1YWxpZmllZE1ldGFzdGF0ZW1lbnRWZXJpZmllZCkge1xuICAgICAgY29uc3QgbWV0YXN0YXRlbWVudE5vZGUgPSBtZXRhc3RhdGVtZW50Tm9kZVF1ZXJ5KHVucXVhbGlmaWVkTWV0YXN0YXRlbWVudE5vZGUpLFxuICAgICAgICAgICAgY29uY2x1c2lvbiA9IENvbmNsdXNpb24uZnJvbU1ldGFzdGF0ZW1lbnROb2RlKG1ldGFzdGF0ZW1lbnROb2RlKTtcblxuICAgICAgY29uY2x1c2lvbnMucHVzaChjb25jbHVzaW9uKTtcblxuICAgICAgY29uY2x1c2lvblZlcmlmaWVkID0gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBjb25jbHVzaW9uVmVyaWZpZWQgP1xuICAgIGNvbnRleHQuY29tcGxldGUoY29uY2x1c2lvbk5vZGUpIDpcbiAgICAgIGNvbnRleHQuaGFsdChjb25jbHVzaW9uTm9kZSk7XG5cbiAgcmV0dXJuIGNvbmNsdXNpb25WZXJpZmllZDtcbn1cbiJdLCJuYW1lcyI6WyJ2ZXJpZnlDb25jbHVzaW9uIiwibWV0YXN0YXRlbWVudE5vZGVRdWVyeSIsIm5vZGVRdWVyeSIsInVucXVhbGlmaWVkTWV0YXN0YXRlbWVudE5vZGVRdWVyeSIsImNvbmNsdXNpb25Ob2RlIiwiY29uY2x1c2lvbnMiLCJjb250ZXh0IiwiY29uY2x1c2lvblZlcmlmaWVkIiwiYmVnaW4iLCJ1bnF1YWxpZmllZE1ldGFzdGF0ZW1lbnROb2RlIiwidW5xdWFsaWZpZWRNZXRhc3RhdGVtZW50VmVyaWZpZWQiLCJ2ZXJpZnlVbnF1YWxpZmllZE1ldGFzdGF0ZW1lbnQiLCJtZXRhc3RhdGVtZW50Tm9kZSIsImNvbmNsdXNpb24iLCJDb25jbHVzaW9uIiwiZnJvbU1ldGFzdGF0ZW1lbnROb2RlIiwicHVzaCIsImNvbXBsZXRlIiwiaGFsdCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7K0JBU0E7OztlQUF3QkE7OzsrREFQRDtxQkFFRzs7Ozs7O0FBRTFCLElBQU1DLHlCQUF5QkMsSUFBQUEsZ0JBQVMsRUFBQyxzQkFDbkNDLG9DQUFvQ0QsSUFBQUEsZ0JBQVMsRUFBQztBQUVyQyxTQUFTRixpQkFBaUJJLGNBQWMsRUFBRUMsV0FBVyxFQUFrQjtRQUFoQkMsVUFBQUEsaUVBQVUsSUFBSTtJQUNsRixJQUFJQyxxQkFBcUIsS0FBSztJQUU5QkQsUUFBUUUsS0FBSyxDQUFDSjtJQUVkLElBQU1LLCtCQUErQk4sa0NBQWtDQztJQUV2RSxJQUFJSyxpQ0FBaUMsSUFBSSxFQUFFO1FBQ3pDLElBQU1DLG1DQUFtQ0osUUFBUUssOEJBQThCLENBQUNGO1FBRWhGLElBQUlDLGtDQUFrQztZQUNwQyxJQUFNRSxvQkFBb0JYLHVCQUF1QlEsK0JBQzNDSSxhQUFhQyxtQkFBVSxDQUFDQyxxQkFBcUIsQ0FBQ0g7WUFFcERQLFlBQVlXLElBQUksQ0FBQ0g7WUFFakJOLHFCQUFxQixJQUFJO1FBQzNCLENBQUM7SUFDSCxDQUFDO0lBRURBLHFCQUNFRCxRQUFRVyxRQUFRLENBQUNiLGtCQUNmRSxRQUFRWSxJQUFJLENBQUNkLGVBQWU7SUFFaEMsT0FBT0c7QUFDVCJ9