"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return verifyCombinatorDeclaration;
    }
});
var _statementAsCombinator = /*#__PURE__*/ _interop_require_default(require("../../verify/statementAsCombinator"));
var _query = require("../../utilities/query");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var statementNodeQuery = (0, _query.nodeQuery)("/combinatorDeclaration/statement");
function verifyCombinatorDeclaration(combinatorDeclarationNode, fileContext) {
    var combinatorDeclarationVerified;
    var statementNode = statementNodeQuery(combinatorDeclarationNode), statementString = fileContext.nodeAsString(statementNode);
    fileContext.trace("Verifying the '".concat(statementString, "' combinator declaration..."), combinatorDeclarationNode);
    var statementVerifiedAsCombinator = (0, _statementAsCombinator.default)(statementNode, fileContext);
    combinatorDeclarationVerified = statementVerifiedAsCombinator; ///
    if (combinatorDeclarationVerified) {
        fileContext.debug("...verified the '".concat(statementString, "' combinator declaration."), combinatorDeclarationNode);
    }
    return combinatorDeclarationVerified;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy92ZXJpZnkvZGVjbGFyYXRpb24vY29tYmluYXRvci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHZlcmlmeVN0YXRlbWVudEFzQ29tYmluYXRvciBmcm9tIFwiLi4vLi4vdmVyaWZ5L3N0YXRlbWVudEFzQ29tYmluYXRvclwiO1xuXG5pbXBvcnQgeyBub2RlUXVlcnkgfSBmcm9tIFwiLi4vLi4vdXRpbGl0aWVzL3F1ZXJ5XCI7XG5cbmNvbnN0IHN0YXRlbWVudE5vZGVRdWVyeSA9IG5vZGVRdWVyeShcIi9jb21iaW5hdG9yRGVjbGFyYXRpb24vc3RhdGVtZW50XCIpO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB2ZXJpZnlDb21iaW5hdG9yRGVjbGFyYXRpb24oY29tYmluYXRvckRlY2xhcmF0aW9uTm9kZSwgZmlsZUNvbnRleHQpIHtcbiAgbGV0IGNvbWJpbmF0b3JEZWNsYXJhdGlvblZlcmlmaWVkO1xuXG4gIGNvbnN0IHN0YXRlbWVudE5vZGUgPSBzdGF0ZW1lbnROb2RlUXVlcnkoY29tYmluYXRvckRlY2xhcmF0aW9uTm9kZSksXG4gICAgICAgIHN0YXRlbWVudFN0cmluZyA9IGZpbGVDb250ZXh0Lm5vZGVBc1N0cmluZyhzdGF0ZW1lbnROb2RlKTtcblxuICBmaWxlQ29udGV4dC50cmFjZShgVmVyaWZ5aW5nIHRoZSAnJHtzdGF0ZW1lbnRTdHJpbmd9JyBjb21iaW5hdG9yIGRlY2xhcmF0aW9uLi4uYCwgY29tYmluYXRvckRlY2xhcmF0aW9uTm9kZSk7XG5cbiAgY29uc3Qgc3RhdGVtZW50VmVyaWZpZWRBc0NvbWJpbmF0b3IgPSB2ZXJpZnlTdGF0ZW1lbnRBc0NvbWJpbmF0b3Ioc3RhdGVtZW50Tm9kZSwgZmlsZUNvbnRleHQpO1xuXG4gIGNvbWJpbmF0b3JEZWNsYXJhdGlvblZlcmlmaWVkID0gc3RhdGVtZW50VmVyaWZpZWRBc0NvbWJpbmF0b3I7IC8vL1xuXG4gIGlmIChjb21iaW5hdG9yRGVjbGFyYXRpb25WZXJpZmllZCkge1xuICAgIGZpbGVDb250ZXh0LmRlYnVnKGAuLi52ZXJpZmllZCB0aGUgJyR7c3RhdGVtZW50U3RyaW5nfScgY29tYmluYXRvciBkZWNsYXJhdGlvbi5gLCBjb21iaW5hdG9yRGVjbGFyYXRpb25Ob2RlKTtcbiAgfVxuXG4gIHJldHVybiBjb21iaW5hdG9yRGVjbGFyYXRpb25WZXJpZmllZDtcbn1cbiJdLCJuYW1lcyI6WyJ2ZXJpZnlDb21iaW5hdG9yRGVjbGFyYXRpb24iLCJzdGF0ZW1lbnROb2RlUXVlcnkiLCJub2RlUXVlcnkiLCJjb21iaW5hdG9yRGVjbGFyYXRpb25Ob2RlIiwiZmlsZUNvbnRleHQiLCJjb21iaW5hdG9yRGVjbGFyYXRpb25WZXJpZmllZCIsInN0YXRlbWVudE5vZGUiLCJzdGF0ZW1lbnRTdHJpbmciLCJub2RlQXNTdHJpbmciLCJ0cmFjZSIsInN0YXRlbWVudFZlcmlmaWVkQXNDb21iaW5hdG9yIiwidmVyaWZ5U3RhdGVtZW50QXNDb21iaW5hdG9yIiwiZGVidWciXSwibWFwcGluZ3MiOiJBQUFBOzs7OytCQVFBOzs7ZUFBd0JBOzs7NEVBTmdCO3FCQUVkOzs7Ozs7QUFFMUIsSUFBTUMscUJBQXFCQyxJQUFBQSxnQkFBUyxFQUFDO0FBRXRCLFNBQVNGLDRCQUE0QkcseUJBQXlCLEVBQUVDLFdBQVc7SUFDeEYsSUFBSUM7SUFFSixJQUFNQyxnQkFBZ0JMLG1CQUFtQkUsNEJBQ25DSSxrQkFBa0JILFlBQVlJLFlBQVksQ0FBQ0Y7SUFFakRGLFlBQVlLLEtBQUssQ0FBQyxBQUFDLGtCQUFpQyxPQUFoQkYsaUJBQWdCLGdDQUE4Qko7SUFFbEYsSUFBTU8sZ0NBQWdDQyxJQUFBQSw4QkFBMkIsRUFBQ0wsZUFBZUY7SUFFakZDLGdDQUFnQ0ssK0JBQStCLEdBQUc7SUFFbEUsSUFBSUwsK0JBQStCO1FBQ2pDRCxZQUFZUSxLQUFLLENBQUMsQUFBQyxvQkFBbUMsT0FBaEJMLGlCQUFnQiw4QkFBNEJKO0lBQ3BGO0lBRUEsT0FBT0U7QUFDVCJ9