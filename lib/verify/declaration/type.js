"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return verifyTypeDeclaration;
    }
});
var _query = require("../../utilities/query");
var firstTypeNodeQuery = (0, _query.nodeQuery)("/typeDeclaration/type[0]"), secondTypeNodeQuery = (0, _query.nodeQuery)("/typeDeclaration/type[1]");
function verifyTypeDeclaration(typeDeclarationNode) {
    var context = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this;
    var typeDeclarationVerified;
    context.begin(typeDeclarationNode);
    var firstTypeNode = firstTypeNodeQuery(typeDeclarationNode), secondTypeNode = secondTypeNodeQuery(typeDeclarationNode), typeNode = firstTypeNode, superTypeNode = secondTypeNode; ///
    var typeVerified = context.verifyType(typeNode, superTypeNode);
    typeDeclarationVerified = typeVerified; ///
    typeDeclarationVerified ? context.complete(typeDeclarationNode) : context.halt(typeDeclarationNode);
    return typeDeclarationVerified;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy92ZXJpZnkvZGVjbGFyYXRpb24vdHlwZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgbm9kZVF1ZXJ5IH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllcy9xdWVyeVwiO1xuXG5jb25zdCBmaXJzdFR5cGVOb2RlUXVlcnkgPSBub2RlUXVlcnkoXCIvdHlwZURlY2xhcmF0aW9uL3R5cGVbMF1cIiksXG4gICAgICBzZWNvbmRUeXBlTm9kZVF1ZXJ5ID0gbm9kZVF1ZXJ5KFwiL3R5cGVEZWNsYXJhdGlvbi90eXBlWzFdXCIpO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB2ZXJpZnlUeXBlRGVjbGFyYXRpb24odHlwZURlY2xhcmF0aW9uTm9kZSwgY29udGV4dCA9IHRoaXMpIHtcbiAgbGV0IHR5cGVEZWNsYXJhdGlvblZlcmlmaWVkO1xuXG4gIGNvbnRleHQuYmVnaW4odHlwZURlY2xhcmF0aW9uTm9kZSk7XG5cbiAgY29uc3QgZmlyc3RUeXBlTm9kZSA9IGZpcnN0VHlwZU5vZGVRdWVyeSh0eXBlRGVjbGFyYXRpb25Ob2RlKSxcbiAgICAgICAgc2Vjb25kVHlwZU5vZGUgPSBzZWNvbmRUeXBlTm9kZVF1ZXJ5KHR5cGVEZWNsYXJhdGlvbk5vZGUpLFxuICAgICAgICB0eXBlTm9kZSA9IGZpcnN0VHlwZU5vZGUsIC8vL1xuICAgICAgICBzdXBlclR5cGVOb2RlID0gc2Vjb25kVHlwZU5vZGU7IC8vL1xuXG4gIGNvbnN0IHR5cGVWZXJpZmllZCA9IGNvbnRleHQudmVyaWZ5VHlwZSh0eXBlTm9kZSwgc3VwZXJUeXBlTm9kZSk7XG5cbiAgdHlwZURlY2xhcmF0aW9uVmVyaWZpZWQgPSB0eXBlVmVyaWZpZWQ7IC8vL1xuXG4gIHR5cGVEZWNsYXJhdGlvblZlcmlmaWVkID9cbiAgICBjb250ZXh0LmNvbXBsZXRlKHR5cGVEZWNsYXJhdGlvbk5vZGUpIDpcbiAgICAgIGNvbnRleHQuaGFsdCh0eXBlRGVjbGFyYXRpb25Ob2RlKTtcblxuICByZXR1cm4gdHlwZURlY2xhcmF0aW9uVmVyaWZpZWQ7XG59XG4iXSwibmFtZXMiOlsidmVyaWZ5VHlwZURlY2xhcmF0aW9uIiwiZmlyc3RUeXBlTm9kZVF1ZXJ5Iiwibm9kZVF1ZXJ5Iiwic2Vjb25kVHlwZU5vZGVRdWVyeSIsInR5cGVEZWNsYXJhdGlvbk5vZGUiLCJjb250ZXh0IiwidHlwZURlY2xhcmF0aW9uVmVyaWZpZWQiLCJiZWdpbiIsImZpcnN0VHlwZU5vZGUiLCJzZWNvbmRUeXBlTm9kZSIsInR5cGVOb2RlIiwic3VwZXJUeXBlTm9kZSIsInR5cGVWZXJpZmllZCIsInZlcmlmeVR5cGUiLCJjb21wbGV0ZSIsImhhbHQiXSwibWFwcGluZ3MiOiJBQUFBOzs7OytCQU9BOzs7ZUFBd0JBOzs7cUJBTEU7QUFFMUIsSUFBTUMscUJBQXFCQyxJQUFBQSxnQkFBUyxFQUFDLDZCQUMvQkMsc0JBQXNCRCxJQUFBQSxnQkFBUyxFQUFDO0FBRXZCLFNBQVNGLHNCQUFzQkksbUJBQW1CLEVBQWtCO1FBQWhCQyxVQUFBQSxpRUFBVSxJQUFJO0lBQy9FLElBQUlDO0lBRUpELFFBQVFFLEtBQUssQ0FBQ0g7SUFFZCxJQUFNSSxnQkFBZ0JQLG1CQUFtQkcsc0JBQ25DSyxpQkFBaUJOLG9CQUFvQkMsc0JBQ3JDTSxXQUFXRixlQUNYRyxnQkFBZ0JGLGdCQUFnQixHQUFHO0lBRXpDLElBQU1HLGVBQWVQLFFBQVFRLFVBQVUsQ0FBQ0gsVUFBVUM7SUFFbERMLDBCQUEwQk0sY0FBYyxHQUFHO0lBRTNDTiwwQkFDRUQsUUFBUVMsUUFBUSxDQUFDVix1QkFDZkMsUUFBUVUsSUFBSSxDQUFDWCxvQkFBb0I7SUFFckMsT0FBT0U7QUFDVCJ9