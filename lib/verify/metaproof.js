"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return verifyMetaproof;
    }
});
var _metaDerivation = /*#__PURE__*/ _interop_require_default(require("../verify/metaDerivation"));
var _metaLevel = /*#__PURE__*/ _interop_require_default(require("../context/local/metaLevel"));
var _query = require("../utilities/query");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var metaDerivationNodeQuery = (0, _query.nodeQuery)("/metaproof/metaDerivation!");
function verifyMetaproof(metaproofNode, metastatementNode, substitutions, localContext) {
    var metaproofVerified = false;
    var metaLevelLocalContext = _metaLevel.default.fromLocalContext(localContext);
    localContext = metaLevelLocalContext; ///
    var metaDerivationNode = metaDerivationNodeQuery(metaproofNode), metaDerivationVerified = (0, _metaDerivation.default)(metaDerivationNode, substitutions, localContext);
    if (metaDerivationVerified) {
        var lastMetaproofStep = localContext.getLastMetaproofStep(), lastMetaproofStepMetastatementNode = lastMetaproofStep.getMetastatementNode(), lastMetastatementNode = lastMetaproofStepMetastatementNode, lastMetastatementNodeMatchesMetastatementNode = lastMetastatementNode.match(metastatementNode);
        metaproofVerified = lastMetastatementNodeMatchesMetastatementNode; ///
    }
    return metaproofVerified;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy92ZXJpZnkvbWV0YXByb29mLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgdmVyaWZ5TWV0YURlcml2YXRpb24gZnJvbSBcIi4uL3ZlcmlmeS9tZXRhRGVyaXZhdGlvblwiO1xuaW1wb3J0IE1ldGFMZXZlbExvY2FsQ29udGV4dCBmcm9tIFwiLi4vY29udGV4dC9sb2NhbC9tZXRhTGV2ZWxcIjtcblxuaW1wb3J0IHsgbm9kZVF1ZXJ5IH0gZnJvbSBcIi4uL3V0aWxpdGllcy9xdWVyeVwiO1xuXG5jb25zdCBtZXRhRGVyaXZhdGlvbk5vZGVRdWVyeSA9IG5vZGVRdWVyeShcIi9tZXRhcHJvb2YvbWV0YURlcml2YXRpb24hXCIpO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB2ZXJpZnlNZXRhcHJvb2YobWV0YXByb29mTm9kZSwgbWV0YXN0YXRlbWVudE5vZGUsIHN1YnN0aXR1dGlvbnMsIGxvY2FsQ29udGV4dCkge1xuICBsZXQgbWV0YXByb29mVmVyaWZpZWQgPSBmYWxzZTtcblxuICBjb25zdCBtZXRhTGV2ZWxMb2NhbENvbnRleHQgPSBNZXRhTGV2ZWxMb2NhbENvbnRleHQuZnJvbUxvY2FsQ29udGV4dChsb2NhbENvbnRleHQpO1xuXG4gIGxvY2FsQ29udGV4dCA9IG1ldGFMZXZlbExvY2FsQ29udGV4dDsgLy8vXG5cbiAgY29uc3QgbWV0YURlcml2YXRpb25Ob2RlID0gbWV0YURlcml2YXRpb25Ob2RlUXVlcnkobWV0YXByb29mTm9kZSksXG4gICAgICAgIG1ldGFEZXJpdmF0aW9uVmVyaWZpZWQgPSB2ZXJpZnlNZXRhRGVyaXZhdGlvbihtZXRhRGVyaXZhdGlvbk5vZGUsIHN1YnN0aXR1dGlvbnMsIGxvY2FsQ29udGV4dCk7XG5cbiAgaWYgKG1ldGFEZXJpdmF0aW9uVmVyaWZpZWQpIHtcbiAgICBjb25zdCBsYXN0TWV0YXByb29mU3RlcCA9IGxvY2FsQ29udGV4dC5nZXRMYXN0TWV0YXByb29mU3RlcCgpLFxuICAgICAgICAgIGxhc3RNZXRhcHJvb2ZTdGVwTWV0YXN0YXRlbWVudE5vZGUgPSBsYXN0TWV0YXByb29mU3RlcC5nZXRNZXRhc3RhdGVtZW50Tm9kZSgpLFxuICAgICAgICAgIGxhc3RNZXRhc3RhdGVtZW50Tm9kZSA9IGxhc3RNZXRhcHJvb2ZTdGVwTWV0YXN0YXRlbWVudE5vZGUsIC8vL1xuICAgICAgICAgIGxhc3RNZXRhc3RhdGVtZW50Tm9kZU1hdGNoZXNNZXRhc3RhdGVtZW50Tm9kZSA9IGxhc3RNZXRhc3RhdGVtZW50Tm9kZS5tYXRjaChtZXRhc3RhdGVtZW50Tm9kZSk7XG5cbiAgICBtZXRhcHJvb2ZWZXJpZmllZCA9IGxhc3RNZXRhc3RhdGVtZW50Tm9kZU1hdGNoZXNNZXRhc3RhdGVtZW50Tm9kZTsgIC8vL1xuICB9XG5cbiAgcmV0dXJuIG1ldGFwcm9vZlZlcmlmaWVkO1xufVxuIl0sIm5hbWVzIjpbInZlcmlmeU1ldGFwcm9vZiIsIm1ldGFEZXJpdmF0aW9uTm9kZVF1ZXJ5Iiwibm9kZVF1ZXJ5IiwibWV0YXByb29mTm9kZSIsIm1ldGFzdGF0ZW1lbnROb2RlIiwic3Vic3RpdHV0aW9ucyIsImxvY2FsQ29udGV4dCIsIm1ldGFwcm9vZlZlcmlmaWVkIiwibWV0YUxldmVsTG9jYWxDb250ZXh0IiwiTWV0YUxldmVsTG9jYWxDb250ZXh0IiwiZnJvbUxvY2FsQ29udGV4dCIsIm1ldGFEZXJpdmF0aW9uTm9kZSIsIm1ldGFEZXJpdmF0aW9uVmVyaWZpZWQiLCJ2ZXJpZnlNZXRhRGVyaXZhdGlvbiIsImxhc3RNZXRhcHJvb2ZTdGVwIiwiZ2V0TGFzdE1ldGFwcm9vZlN0ZXAiLCJsYXN0TWV0YXByb29mU3RlcE1ldGFzdGF0ZW1lbnROb2RlIiwiZ2V0TWV0YXN0YXRlbWVudE5vZGUiLCJsYXN0TWV0YXN0YXRlbWVudE5vZGUiLCJsYXN0TWV0YXN0YXRlbWVudE5vZGVNYXRjaGVzTWV0YXN0YXRlbWVudE5vZGUiLCJtYXRjaCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7K0JBU0E7OztlQUF3QkE7OztxRUFQUztnRUFDQztxQkFFUjs7Ozs7O0FBRTFCLElBQU1DLDBCQUEwQkMsSUFBQUEsZ0JBQVMsRUFBQztBQUUzQixTQUFTRixnQkFBZ0JHLGFBQWEsRUFBRUMsaUJBQWlCLEVBQUVDLGFBQWEsRUFBRUMsWUFBWTtJQUNuRyxJQUFJQyxvQkFBb0I7SUFFeEIsSUFBTUMsd0JBQXdCQyxrQkFBcUIsQ0FBQ0MsZ0JBQWdCLENBQUNKO0lBRXJFQSxlQUFlRSx1QkFBdUIsR0FBRztJQUV6QyxJQUFNRyxxQkFBcUJWLHdCQUF3QkUsZ0JBQzdDUyx5QkFBeUJDLElBQUFBLHVCQUFvQixFQUFDRixvQkFBb0JOLGVBQWVDO0lBRXZGLElBQUlNLHdCQUF3QjtRQUMxQixJQUFNRSxvQkFBb0JSLGFBQWFTLG9CQUFvQixJQUNyREMscUNBQXFDRixrQkFBa0JHLG9CQUFvQixJQUMzRUMsd0JBQXdCRixvQ0FDeEJHLGdEQUFnREQsc0JBQXNCRSxLQUFLLENBQUNoQjtRQUVsRkcsb0JBQW9CWSwrQ0FBZ0QsR0FBRztJQUN6RTtJQUVBLE9BQU9aO0FBQ1QifQ==