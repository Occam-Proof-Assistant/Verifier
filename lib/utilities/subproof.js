"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "subproofStringFromSubproofNode", {
    enumerable: true,
    get: function() {
        return subproofStringFromSubproofNode;
    }
});
var _query = require("./query");
var _string = require("./string");
var lastStepStatementNodeQuery = (0, _query.nodeQuery)("/subproof/subDerivation/step[-1]/statement"), suppositionStatementNodesQuery = (0, _query.nodesQuery)("/subproof/supposition/statement");
function subproofStringFromSubproofNode(subproofNode, fileContext) {
    var tokens = fileContext.getTokens(), suppositionStatementNodes = suppositionStatementNodesQuery(subproofNode), lastStepStatementNode = lastStepStatementNodeQuery(subproofNode), suppositionStatementsString = (0, _string.nodesAsString)(suppositionStatementNodes, tokens), lastStepStatementString = (0, _string.nodeAsString)(lastStepStatementNode, tokens), subproofString = "[".concat(suppositionStatementsString, "]...").concat(lastStepStatementString);
    return subproofString;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvc3VicHJvb2YuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IG5vZGVRdWVyeSwgbm9kZXNRdWVyeSB9IGZyb20gXCIuL3F1ZXJ5XCI7XG5pbXBvcnQgeyBub2RlQXNTdHJpbmcsIG5vZGVzQXNTdHJpbmcgfSBmcm9tIFwiLi9zdHJpbmdcIjtcblxuY29uc3QgbGFzdFN0ZXBTdGF0ZW1lbnROb2RlUXVlcnkgPSBub2RlUXVlcnkoXCIvc3VicHJvb2Yvc3ViRGVyaXZhdGlvbi9zdGVwWy0xXS9zdGF0ZW1lbnRcIiksXG4gICAgICBzdXBwb3NpdGlvblN0YXRlbWVudE5vZGVzUXVlcnkgPSBub2Rlc1F1ZXJ5KFwiL3N1YnByb29mL3N1cHBvc2l0aW9uL3N0YXRlbWVudFwiKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHN1YnByb29mU3RyaW5nRnJvbVN1YnByb29mTm9kZShzdWJwcm9vZk5vZGUsIGZpbGVDb250ZXh0KSB7XG4gIGNvbnN0IHRva2VucyA9IGZpbGVDb250ZXh0LmdldFRva2VucygpLFxuICAgICAgICBzdXBwb3NpdGlvblN0YXRlbWVudE5vZGVzID0gc3VwcG9zaXRpb25TdGF0ZW1lbnROb2Rlc1F1ZXJ5KHN1YnByb29mTm9kZSksXG4gICAgICAgIGxhc3RTdGVwU3RhdGVtZW50Tm9kZSA9IGxhc3RTdGVwU3RhdGVtZW50Tm9kZVF1ZXJ5KHN1YnByb29mTm9kZSksXG4gICAgICAgIHN1cHBvc2l0aW9uU3RhdGVtZW50c1N0cmluZyA9IG5vZGVzQXNTdHJpbmcoc3VwcG9zaXRpb25TdGF0ZW1lbnROb2RlcywgdG9rZW5zKSxcbiAgICAgICAgbGFzdFN0ZXBTdGF0ZW1lbnRTdHJpbmcgPSBub2RlQXNTdHJpbmcobGFzdFN0ZXBTdGF0ZW1lbnROb2RlLCB0b2tlbnMpLFxuICAgICAgICBzdWJwcm9vZlN0cmluZyA9IGBbJHtzdXBwb3NpdGlvblN0YXRlbWVudHNTdHJpbmd9XS4uLiR7bGFzdFN0ZXBTdGF0ZW1lbnRTdHJpbmd9YDtcblxuICByZXR1cm4gc3VicHJvb2ZTdHJpbmc7XG59XG4iXSwibmFtZXMiOlsic3VicHJvb2ZTdHJpbmdGcm9tU3VicHJvb2ZOb2RlIiwibGFzdFN0ZXBTdGF0ZW1lbnROb2RlUXVlcnkiLCJub2RlUXVlcnkiLCJzdXBwb3NpdGlvblN0YXRlbWVudE5vZGVzUXVlcnkiLCJub2Rlc1F1ZXJ5Iiwic3VicHJvb2ZOb2RlIiwiZmlsZUNvbnRleHQiLCJ0b2tlbnMiLCJnZXRUb2tlbnMiLCJzdXBwb3NpdGlvblN0YXRlbWVudE5vZGVzIiwibGFzdFN0ZXBTdGF0ZW1lbnROb2RlIiwic3VwcG9zaXRpb25TdGF0ZW1lbnRzU3RyaW5nIiwibm9kZXNBc1N0cmluZyIsImxhc3RTdGVwU3RhdGVtZW50U3RyaW5nIiwibm9kZUFzU3RyaW5nIiwic3VicHJvb2ZTdHJpbmciXSwibWFwcGluZ3MiOiJBQUFBOzs7OytCQVFnQkE7OztlQUFBQTs7O3FCQU5zQjtzQkFDTTtBQUU1QyxJQUFNQyw2QkFBNkJDLElBQUFBLGdCQUFTLEVBQUMsK0NBQ3ZDQyxpQ0FBaUNDLElBQUFBLGlCQUFVLEVBQUM7QUFFM0MsU0FBU0osK0JBQStCSyxZQUFZLEVBQUVDLFdBQVc7SUFDdEUsSUFBTUMsU0FBU0QsWUFBWUUsU0FBUyxJQUM5QkMsNEJBQTRCTiwrQkFBK0JFLGVBQzNESyx3QkFBd0JULDJCQUEyQkksZUFDbkRNLDhCQUE4QkMsSUFBQUEscUJBQWEsRUFBQ0gsMkJBQTJCRixTQUN2RU0sMEJBQTBCQyxJQUFBQSxvQkFBWSxFQUFDSix1QkFBdUJILFNBQzlEUSxpQkFBaUIsQUFBQyxJQUFxQ0YsT0FBbENGLDZCQUE0QixRQUE4QixPQUF4QkU7SUFFN0QsT0FBT0U7QUFDVCJ9