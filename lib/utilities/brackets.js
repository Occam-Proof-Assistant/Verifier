"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    bracketedStatementChildNodeFromStatementNode: function() {
        return bracketedStatementChildNodeFromStatementNode;
    },
    bracketedTermChildNodeFromTermNode: function() {
        return bracketedTermChildNodeFromTermNode;
    },
    stripBracketsFromStatementNode: function() {
        return stripBracketsFromStatementNode;
    },
    stripBracketsFromTermNode: function() {
        return stripBracketsFromTermNode;
    }
});
var _query = require("../utilities/query");
var _bracketed = require("../constructor/bracketed");
var _bracketed1 = require("../combinator/bracketed");
var _constants = require("../constants");
var bracketedTermChildNodeQuery = (0, _query.nodeQuery)("/term/argument/term"), bracketedStatementChildNodeQuery = (0, _query.nodeQuery)("/statement/metaArgument/statement");
function stripBracketsFromTermNode(termNode) {
    var bracketedTermChildNode = bracketedTermChildNodeFromTermNode(termNode);
    if (bracketedTermChildNode !== null) {
        termNode = bracketedTermChildNode; ///
    }
    return termNode;
}
function stripBracketsFromStatementNode(statementNode) {
    var bracketedStatementChildNode = bracketedStatementChildNodeFromStatementNode(statementNode);
    if (bracketedStatementChildNode !== null) {
        statementNode = bracketedStatementChildNode; ///
    }
    return statementNode;
}
function bracketedTermChildNodeFromTermNode(termNode) {
    var bracketedTermChildNode = null;
    var depth = _constants.BRACKETED_TERM_DEPTH, termNodeMatchBracketedTermNode = termNode.match(_bracketed.bracketedTermNode, depth);
    if (termNodeMatchBracketedTermNode) {
        bracketedTermChildNode = bracketedTermChildNodeQuery(termNode);
    }
    return bracketedTermChildNode;
}
function bracketedStatementChildNodeFromStatementNode(statementNode) {
    var bracketedStatementChildNode = null;
    var depth = _constants.BRACKETED_STATEMENT_DEPTH, statementNodeMatchBracketedStatementNode = statementNode.match(_bracketed1.bracketedStatementNode, depth);
    if (statementNodeMatchBracketedStatementNode) {
        bracketedStatementChildNode = bracketedStatementChildNodeQuery(statementNode);
    }
    return bracketedStatementChildNode;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvYnJhY2tldHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IG5vZGVRdWVyeSB9IGZyb20gXCIuLi91dGlsaXRpZXMvcXVlcnlcIjtcbmltcG9ydCB7IGJyYWNrZXRlZFRlcm1Ob2RlIH0gZnJvbSBcIi4uL2NvbnN0cnVjdG9yL2JyYWNrZXRlZFwiO1xuaW1wb3J0IHsgYnJhY2tldGVkU3RhdGVtZW50Tm9kZSB9IGZyb20gXCIuLi9jb21iaW5hdG9yL2JyYWNrZXRlZFwiO1xuaW1wb3J0IHsgQlJBQ0tFVEVEX1RFUk1fREVQVEgsIEJSQUNLRVRFRF9TVEFURU1FTlRfREVQVEggfSBmcm9tIFwiLi4vY29uc3RhbnRzXCI7XG5cbmNvbnN0IGJyYWNrZXRlZFRlcm1DaGlsZE5vZGVRdWVyeSA9IG5vZGVRdWVyeShcIi90ZXJtL2FyZ3VtZW50L3Rlcm1cIiksXG4gICAgICBicmFja2V0ZWRTdGF0ZW1lbnRDaGlsZE5vZGVRdWVyeSA9IG5vZGVRdWVyeShcIi9zdGF0ZW1lbnQvbWV0YUFyZ3VtZW50L3N0YXRlbWVudFwiKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHN0cmlwQnJhY2tldHNGcm9tVGVybU5vZGUodGVybU5vZGUpIHtcbiAgY29uc3QgYnJhY2tldGVkVGVybUNoaWxkTm9kZSA9IGJyYWNrZXRlZFRlcm1DaGlsZE5vZGVGcm9tVGVybU5vZGUodGVybU5vZGUpO1xuXG4gIGlmIChicmFja2V0ZWRUZXJtQ2hpbGROb2RlICE9PSBudWxsKSB7XG4gICAgdGVybU5vZGUgPSBicmFja2V0ZWRUZXJtQ2hpbGROb2RlOyAgLy8vXG4gIH1cblxuICByZXR1cm4gdGVybU5vZGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdHJpcEJyYWNrZXRzRnJvbVN0YXRlbWVudE5vZGUoc3RhdGVtZW50Tm9kZSkge1xuICBjb25zdCBicmFja2V0ZWRTdGF0ZW1lbnRDaGlsZE5vZGUgPSBicmFja2V0ZWRTdGF0ZW1lbnRDaGlsZE5vZGVGcm9tU3RhdGVtZW50Tm9kZShzdGF0ZW1lbnROb2RlKTtcblxuICBpZiAoYnJhY2tldGVkU3RhdGVtZW50Q2hpbGROb2RlICE9PSBudWxsKSB7XG4gICAgc3RhdGVtZW50Tm9kZSA9IGJyYWNrZXRlZFN0YXRlbWVudENoaWxkTm9kZTsgIC8vL1xuICB9XG5cbiAgcmV0dXJuIHN0YXRlbWVudE5vZGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBicmFja2V0ZWRUZXJtQ2hpbGROb2RlRnJvbVRlcm1Ob2RlKHRlcm1Ob2RlKSB7XG4gIGxldCBicmFja2V0ZWRUZXJtQ2hpbGROb2RlID0gbnVsbDtcblxuICBjb25zdCBkZXB0aCA9IEJSQUNLRVRFRF9URVJNX0RFUFRILFxuICAgICAgICB0ZXJtTm9kZU1hdGNoQnJhY2tldGVkVGVybU5vZGUgPSB0ZXJtTm9kZS5tYXRjaChicmFja2V0ZWRUZXJtTm9kZSwgZGVwdGgpO1xuXG4gIGlmICh0ZXJtTm9kZU1hdGNoQnJhY2tldGVkVGVybU5vZGUpIHtcbiAgICBicmFja2V0ZWRUZXJtQ2hpbGROb2RlID0gYnJhY2tldGVkVGVybUNoaWxkTm9kZVF1ZXJ5KHRlcm1Ob2RlKTtcbiAgfVxuXG4gIHJldHVybiBicmFja2V0ZWRUZXJtQ2hpbGROb2RlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYnJhY2tldGVkU3RhdGVtZW50Q2hpbGROb2RlRnJvbVN0YXRlbWVudE5vZGUoc3RhdGVtZW50Tm9kZSkge1xuICBsZXQgYnJhY2tldGVkU3RhdGVtZW50Q2hpbGROb2RlID0gbnVsbDtcblxuICBjb25zdCBkZXB0aCA9IEJSQUNLRVRFRF9TVEFURU1FTlRfREVQVEgsXG4gICAgICAgIHN0YXRlbWVudE5vZGVNYXRjaEJyYWNrZXRlZFN0YXRlbWVudE5vZGUgPSBzdGF0ZW1lbnROb2RlLm1hdGNoKGJyYWNrZXRlZFN0YXRlbWVudE5vZGUsIGRlcHRoKTtcblxuICBpZiAoc3RhdGVtZW50Tm9kZU1hdGNoQnJhY2tldGVkU3RhdGVtZW50Tm9kZSkge1xuICAgIGJyYWNrZXRlZFN0YXRlbWVudENoaWxkTm9kZSA9IGJyYWNrZXRlZFN0YXRlbWVudENoaWxkTm9kZVF1ZXJ5KHN0YXRlbWVudE5vZGUpO1xuICB9XG5cbiAgcmV0dXJuIGJyYWNrZXRlZFN0YXRlbWVudENoaWxkTm9kZTtcbn1cbiJdLCJuYW1lcyI6WyJicmFja2V0ZWRTdGF0ZW1lbnRDaGlsZE5vZGVGcm9tU3RhdGVtZW50Tm9kZSIsImJyYWNrZXRlZFRlcm1DaGlsZE5vZGVGcm9tVGVybU5vZGUiLCJzdHJpcEJyYWNrZXRzRnJvbVN0YXRlbWVudE5vZGUiLCJzdHJpcEJyYWNrZXRzRnJvbVRlcm1Ob2RlIiwiYnJhY2tldGVkVGVybUNoaWxkTm9kZVF1ZXJ5Iiwibm9kZVF1ZXJ5IiwiYnJhY2tldGVkU3RhdGVtZW50Q2hpbGROb2RlUXVlcnkiLCJ0ZXJtTm9kZSIsImJyYWNrZXRlZFRlcm1DaGlsZE5vZGUiLCJzdGF0ZW1lbnROb2RlIiwiYnJhY2tldGVkU3RhdGVtZW50Q2hpbGROb2RlIiwiZGVwdGgiLCJCUkFDS0VURURfVEVSTV9ERVBUSCIsInRlcm1Ob2RlTWF0Y2hCcmFja2V0ZWRUZXJtTm9kZSIsIm1hdGNoIiwiYnJhY2tldGVkVGVybU5vZGUiLCJCUkFDS0VURURfU1RBVEVNRU5UX0RFUFRIIiwic3RhdGVtZW50Tm9kZU1hdGNoQnJhY2tldGVkU3RhdGVtZW50Tm9kZSIsImJyYWNrZXRlZFN0YXRlbWVudE5vZGUiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztJQTJDZ0JBLDRDQUE0QztlQUE1Q0E7O0lBYkFDLGtDQUFrQztlQUFsQ0E7O0lBVkFDLDhCQUE4QjtlQUE5QkE7O0lBVkFDLHlCQUF5QjtlQUF6QkE7OztxQkFSVTt5QkFDUTswQkFDSzt5QkFDeUI7QUFFaEUsSUFBTUMsOEJBQThCQyxJQUFBQSxnQkFBUyxFQUFDLHdCQUN4Q0MsbUNBQW1DRCxJQUFBQSxnQkFBUyxFQUFDO0FBRTVDLFNBQVNGLDBCQUEwQkksUUFBUTtJQUNoRCxJQUFNQyx5QkFBeUJQLG1DQUFtQ007SUFFbEUsSUFBSUMsMkJBQTJCLE1BQU07UUFDbkNELFdBQVdDLHdCQUF5QixHQUFHO0lBQ3pDO0lBRUEsT0FBT0Q7QUFDVDtBQUVPLFNBQVNMLCtCQUErQk8sYUFBYTtJQUMxRCxJQUFNQyw4QkFBOEJWLDZDQUE2Q1M7SUFFakYsSUFBSUMsZ0NBQWdDLE1BQU07UUFDeENELGdCQUFnQkMsNkJBQThCLEdBQUc7SUFDbkQ7SUFFQSxPQUFPRDtBQUNUO0FBRU8sU0FBU1IsbUNBQW1DTSxRQUFRO0lBQ3pELElBQUlDLHlCQUF5QjtJQUU3QixJQUFNRyxRQUFRQywrQkFBb0IsRUFDNUJDLGlDQUFpQ04sU0FBU08sS0FBSyxDQUFDQyw0QkFBaUIsRUFBRUo7SUFFekUsSUFBSUUsZ0NBQWdDO1FBQ2xDTCx5QkFBeUJKLDRCQUE0Qkc7SUFDdkQ7SUFFQSxPQUFPQztBQUNUO0FBRU8sU0FBU1IsNkNBQTZDUyxhQUFhO0lBQ3hFLElBQUlDLDhCQUE4QjtJQUVsQyxJQUFNQyxRQUFRSyxvQ0FBeUIsRUFDakNDLDJDQUEyQ1IsY0FBY0ssS0FBSyxDQUFDSSxrQ0FBc0IsRUFBRVA7SUFFN0YsSUFBSU0sMENBQTBDO1FBQzVDUCw4QkFBOEJKLGlDQUFpQ0c7SUFDakU7SUFFQSxPQUFPQztBQUNUIn0=