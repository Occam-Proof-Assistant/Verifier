"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "matchStatementModuloBrackets", {
    enumerable: true,
    get: function() {
        return matchStatementModuloBrackets;
    }
});
var _matcher = require("../matcher");
var _query = require("./query");
var _ruleNames = require("../ruleNames");
var _nonTerminalNode = require("../utilities/nonTerminalNode");
var statementNodeQuery = (0, _query.nodeQuery)("/metaArgument/statement!");
function matchStatementModuloBrackets(statementNodeA, statementNodeB) {
    var statementMatchesModuloBrackets = false;
    var ruleName = _ruleNames.META_ARGUMENT_RULE_NAME, nonTerminalNodeA = statementNodeA, nonTerminalNodeB = statementNodeB; ///
    if (!statementMatchesModuloBrackets) {
        var nonTerminalNodeMatches = _matcher.matcher.matchNonTerminalNode(nonTerminalNodeA, nonTerminalNodeB);
        statementMatchesModuloBrackets = nonTerminalNodeMatches; ///
    }
    if (!statementMatchesModuloBrackets) {
        var bracketedNonTerminalNodeA = (0, _nonTerminalNode.bracketedNonTerminalNodeFromNonTerminalNode)(nonTerminalNodeA, ruleName), metaArgumentNodeA = bracketedNonTerminalNodeA; ///
        if (metaArgumentNodeA !== null) {
            var _$statementNodeA = statementNodeQuery(metaArgumentNodeA), nodeA = _$statementNodeA, nodeB = nonTerminalNodeB, nodeMatches = _matcher.matcher.matchNode(nodeA, nodeB);
            statementMatchesModuloBrackets = nodeMatches; ///
        }
    }
    if (!statementMatchesModuloBrackets) {
        var bracketedNonTerminalNodeB = (0, _nonTerminalNode.bracketedNonTerminalNodeFromNonTerminalNode)(nonTerminalNodeB, ruleName), metaArgumentNodeB = bracketedNonTerminalNodeB; ///
        if (metaArgumentNodeB !== null) {
            var _$statementNodeB = statementNodeQuery(metaArgumentNodeB), nodeA1 = nonTerminalNodeA, nodeB1 = _$statementNodeB, nodeMatches1 = _matcher.matcher.matchNode(nodeA1, nodeB1);
            statementMatchesModuloBrackets = nodeMatches1; ///
        }
    }
    return statementMatchesModuloBrackets;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvcHJvb2YuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IG1hdGNoZXIgfSBmcm9tIFwiLi4vbWF0Y2hlclwiO1xuaW1wb3J0IHsgbm9kZVF1ZXJ5IH0gZnJvbSBcIi4vcXVlcnlcIjtcbmltcG9ydCB7IE1FVEFfQVJHVU1FTlRfUlVMRV9OQU1FIH0gZnJvbSBcIi4uL3J1bGVOYW1lc1wiO1xuaW1wb3J0IHsgYnJhY2tldGVkTm9uVGVybWluYWxOb2RlRnJvbU5vblRlcm1pbmFsTm9kZSB9IGZyb20gXCIuLi91dGlsaXRpZXMvbm9uVGVybWluYWxOb2RlXCJcblxuY29uc3Qgc3RhdGVtZW50Tm9kZVF1ZXJ5ID0gbm9kZVF1ZXJ5KCcvbWV0YUFyZ3VtZW50L3N0YXRlbWVudCEnKTtcblxuZXhwb3J0IGZ1bmN0aW9uIG1hdGNoU3RhdGVtZW50TW9kdWxvQnJhY2tldHMoc3RhdGVtZW50Tm9kZUEsIHN0YXRlbWVudE5vZGVCKSB7XG4gIGxldCBzdGF0ZW1lbnRNYXRjaGVzTW9kdWxvQnJhY2tldHMgPSBmYWxzZTtcblxuICBjb25zdCBydWxlTmFtZSA9IE1FVEFfQVJHVU1FTlRfUlVMRV9OQU1FLFxuICAgICAgICBub25UZXJtaW5hbE5vZGVBID0gc3RhdGVtZW50Tm9kZUEsICAvLy9cbiAgICAgICAgbm9uVGVybWluYWxOb2RlQiA9IHN0YXRlbWVudE5vZGVCOyAgLy8vXG5cbiAgaWYgKCFzdGF0ZW1lbnRNYXRjaGVzTW9kdWxvQnJhY2tldHMpIHtcbiAgICBjb25zdCBub25UZXJtaW5hbE5vZGVNYXRjaGVzID0gbWF0Y2hlci5tYXRjaE5vblRlcm1pbmFsTm9kZShub25UZXJtaW5hbE5vZGVBLCBub25UZXJtaW5hbE5vZGVCKTtcblxuICAgIHN0YXRlbWVudE1hdGNoZXNNb2R1bG9CcmFja2V0cyA9IG5vblRlcm1pbmFsTm9kZU1hdGNoZXM7ICAvLy9cbiAgfVxuXG4gIGlmICghc3RhdGVtZW50TWF0Y2hlc01vZHVsb0JyYWNrZXRzKSB7XG4gICAgY29uc3QgYnJhY2tldGVkTm9uVGVybWluYWxOb2RlQSA9IGJyYWNrZXRlZE5vblRlcm1pbmFsTm9kZUZyb21Ob25UZXJtaW5hbE5vZGUobm9uVGVybWluYWxOb2RlQSwgcnVsZU5hbWUpLFxuICAgICAgICAgIG1ldGFBcmd1bWVudE5vZGVBID0gYnJhY2tldGVkTm9uVGVybWluYWxOb2RlQTsgIC8vL1xuXG4gICAgaWYgKG1ldGFBcmd1bWVudE5vZGVBICE9PSBudWxsKSB7XG4gICAgICBjb25zdCBzdGF0ZW1lbnROb2RlQSA9IHN0YXRlbWVudE5vZGVRdWVyeShtZXRhQXJndW1lbnROb2RlQSksXG4gICAgICAgICAgICBub2RlQSA9IHN0YXRlbWVudE5vZGVBLCAgLy8vXG4gICAgICAgICAgICBub2RlQiA9IG5vblRlcm1pbmFsTm9kZUIsIC8vL1xuICAgICAgICAgICAgbm9kZU1hdGNoZXMgPSBtYXRjaGVyLm1hdGNoTm9kZShub2RlQSwgbm9kZUIpO1xuXG4gICAgICBzdGF0ZW1lbnRNYXRjaGVzTW9kdWxvQnJhY2tldHMgPSBub2RlTWF0Y2hlczsgLy8vXG4gICAgfVxuICB9XG5cbiAgaWYgKCFzdGF0ZW1lbnRNYXRjaGVzTW9kdWxvQnJhY2tldHMpIHtcbiAgICBjb25zdCBicmFja2V0ZWROb25UZXJtaW5hbE5vZGVCID0gYnJhY2tldGVkTm9uVGVybWluYWxOb2RlRnJvbU5vblRlcm1pbmFsTm9kZShub25UZXJtaW5hbE5vZGVCLCBydWxlTmFtZSksXG4gICAgICAgICAgbWV0YUFyZ3VtZW50Tm9kZUIgPSBicmFja2V0ZWROb25UZXJtaW5hbE5vZGVCOyAgLy8vXG5cbiAgICBpZiAobWV0YUFyZ3VtZW50Tm9kZUIgIT09IG51bGwpIHtcbiAgICAgIGNvbnN0IHN0YXRlbWVudE5vZGVCID0gc3RhdGVtZW50Tm9kZVF1ZXJ5KG1ldGFBcmd1bWVudE5vZGVCKSxcbiAgICAgICAgICAgIG5vZGVBID0gbm9uVGVybWluYWxOb2RlQSwgLy8vXG4gICAgICAgICAgICBub2RlQiA9IHN0YXRlbWVudE5vZGVCLCAgLy8vXG4gICAgICAgICAgICBub2RlTWF0Y2hlcyA9IG1hdGNoZXIubWF0Y2hOb2RlKG5vZGVBLCBub2RlQik7XG5cbiAgICAgIHN0YXRlbWVudE1hdGNoZXNNb2R1bG9CcmFja2V0cyA9IG5vZGVNYXRjaGVzOyAvLy9cbiAgICB9XG4gIH1cblxuICByZXR1cm4gc3RhdGVtZW50TWF0Y2hlc01vZHVsb0JyYWNrZXRzO1xufVxuIl0sIm5hbWVzIjpbIm1hdGNoU3RhdGVtZW50TW9kdWxvQnJhY2tldHMiLCJzdGF0ZW1lbnROb2RlUXVlcnkiLCJub2RlUXVlcnkiLCJzdGF0ZW1lbnROb2RlQSIsInN0YXRlbWVudE5vZGVCIiwic3RhdGVtZW50TWF0Y2hlc01vZHVsb0JyYWNrZXRzIiwicnVsZU5hbWUiLCJNRVRBX0FSR1VNRU5UX1JVTEVfTkFNRSIsIm5vblRlcm1pbmFsTm9kZUEiLCJub25UZXJtaW5hbE5vZGVCIiwibm9uVGVybWluYWxOb2RlTWF0Y2hlcyIsIm1hdGNoZXIiLCJtYXRjaE5vblRlcm1pbmFsTm9kZSIsImJyYWNrZXRlZE5vblRlcm1pbmFsTm9kZUEiLCJicmFja2V0ZWROb25UZXJtaW5hbE5vZGVGcm9tTm9uVGVybWluYWxOb2RlIiwibWV0YUFyZ3VtZW50Tm9kZUEiLCJub2RlQSIsIm5vZGVCIiwibm9kZU1hdGNoZXMiLCJtYXRjaE5vZGUiLCJicmFja2V0ZWROb25UZXJtaW5hbE5vZGVCIiwibWV0YUFyZ3VtZW50Tm9kZUIiXSwibWFwcGluZ3MiOiJBQUFBOzs7OytCQVNnQkE7OztlQUFBQTs7O3VCQVBRO3FCQUNFO3lCQUNjOytCQUNvQjtBQUU1RCxJQUFNQyxxQkFBcUJDLElBQUFBLGdCQUFTLEVBQUM7QUFFOUIsU0FBU0YsNkJBQTZCRyxjQUFjLEVBQUVDLGNBQWMsRUFBRTtJQUMzRSxJQUFJQyxpQ0FBaUMsS0FBSztJQUUxQyxJQUFNQyxXQUFXQyxrQ0FBdUIsRUFDbENDLG1CQUFtQkwsZ0JBQ25CTSxtQkFBbUJMLGdCQUFpQixHQUFHO0lBRTdDLElBQUksQ0FBQ0MsZ0NBQWdDO1FBQ25DLElBQU1LLHlCQUF5QkMsZ0JBQU8sQ0FBQ0Msb0JBQW9CLENBQUNKLGtCQUFrQkM7UUFFOUVKLGlDQUFpQ0ssd0JBQXlCLEdBQUc7SUFDL0QsQ0FBQztJQUVELElBQUksQ0FBQ0wsZ0NBQWdDO1FBQ25DLElBQU1RLDRCQUE0QkMsSUFBQUEsNERBQTJDLEVBQUNOLGtCQUFrQkYsV0FDMUZTLG9CQUFvQkYsMkJBQTRCLEdBQUc7UUFFekQsSUFBSUUsc0JBQXNCLElBQUksRUFBRTtZQUM5QixJQUFNWixtQkFBaUJGLG1CQUFtQmMsb0JBQ3BDQyxRQUFRYixrQkFDUmMsUUFBUVIsa0JBQ1JTLGNBQWNQLGdCQUFPLENBQUNRLFNBQVMsQ0FBQ0gsT0FBT0M7WUFFN0NaLGlDQUFpQ2EsYUFBYSxHQUFHO1FBQ25ELENBQUM7SUFDSCxDQUFDO0lBRUQsSUFBSSxDQUFDYixnQ0FBZ0M7UUFDbkMsSUFBTWUsNEJBQTRCTixJQUFBQSw0REFBMkMsRUFBQ0wsa0JBQWtCSCxXQUMxRmUsb0JBQW9CRCwyQkFBNEIsR0FBRztRQUV6RCxJQUFJQyxzQkFBc0IsSUFBSSxFQUFFO1lBQzlCLElBQU1qQixtQkFBaUJILG1CQUFtQm9CLG9CQUNwQ0wsU0FBUVIsa0JBQ1JTLFNBQVFiLGtCQUNSYyxlQUFjUCxnQkFBTyxDQUFDUSxTQUFTLENBQUNILFFBQU9DO1lBRTdDWixpQ0FBaUNhLGNBQWEsR0FBRztRQUNuRCxDQUFDO0lBQ0gsQ0FBQztJQUVELE9BQU9iO0FBQ1QifQ==