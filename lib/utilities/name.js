"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    metaTypeNameFromMetaTypeNode: function() {
        return metaTypeNameFromMetaTypeNode;
    },
    metavariableNameFromMetavariableNode: function() {
        return metavariableNameFromMetavariableNode;
    },
    typeNameFromTypeNode: function() {
        return typeNameFromTypeNode;
    }
});
var _query = require("../utilities/query");
var typeTerminalNodeQuery = (0, _query.nodeQuery)("/type/@type"), nameTerminalNodeQuery = (0, _query.nodeQuery)("/metavariable/@name"), metaTypeTerminalNodeQuery = (0, _query.nodeQuery)("/metaType/@meta-type");
function typeNameFromTypeNode(typeNode) {
    var typeTerminalNode = typeTerminalNodeQuery(typeNode), typeTerminalNodeContent = typeTerminalNode.getContent(), typeName = typeTerminalNodeContent; ///
    return typeName;
}
function metaTypeNameFromMetaTypeNode(metaTypeNode) {
    var metaTypeTerminalNode = metaTypeTerminalNodeQuery(metaTypeNode), metaTypeTerminalNodeContent = metaTypeTerminalNode.getContent(), metaTypeName = metaTypeTerminalNodeContent; ///
    return metaTypeName;
}
function metavariableNameFromMetavariableNode(metavariableNode) {
    var nameTerminalNode = nameTerminalNodeQuery(metavariableNode), nameTerminalNodeContent = nameTerminalNode.getContent(), metavariableName = nameTerminalNodeContent; ///
    return metavariableName;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvbmFtZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgbm9kZVF1ZXJ5IH0gZnJvbSBcIi4uL3V0aWxpdGllcy9xdWVyeVwiO1xuXG5jb25zdCB0eXBlVGVybWluYWxOb2RlUXVlcnkgPSBub2RlUXVlcnkoXCIvdHlwZS9AdHlwZVwiKSxcbiAgICAgIG5hbWVUZXJtaW5hbE5vZGVRdWVyeSA9IG5vZGVRdWVyeShcIi9tZXRhdmFyaWFibGUvQG5hbWVcIiksXG4gICAgICBtZXRhVHlwZVRlcm1pbmFsTm9kZVF1ZXJ5ID0gbm9kZVF1ZXJ5KFwiL21ldGFUeXBlL0BtZXRhLXR5cGVcIik7XG5cbmV4cG9ydCBmdW5jdGlvbiB0eXBlTmFtZUZyb21UeXBlTm9kZSh0eXBlTm9kZSkge1xuICBjb25zdCB0eXBlVGVybWluYWxOb2RlID0gdHlwZVRlcm1pbmFsTm9kZVF1ZXJ5KHR5cGVOb2RlKSxcbiAgICAgICAgdHlwZVRlcm1pbmFsTm9kZUNvbnRlbnQgPSB0eXBlVGVybWluYWxOb2RlLmdldENvbnRlbnQoKSxcbiAgICAgICAgdHlwZU5hbWUgPSB0eXBlVGVybWluYWxOb2RlQ29udGVudDsgLy8vXG5cbiAgcmV0dXJuIHR5cGVOYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbWV0YVR5cGVOYW1lRnJvbU1ldGFUeXBlTm9kZShtZXRhVHlwZU5vZGUpIHtcbiAgICBjb25zdCBtZXRhVHlwZVRlcm1pbmFsTm9kZSA9IG1ldGFUeXBlVGVybWluYWxOb2RlUXVlcnkobWV0YVR5cGVOb2RlKSxcbiAgICAgICAgICBtZXRhVHlwZVRlcm1pbmFsTm9kZUNvbnRlbnQgPSBtZXRhVHlwZVRlcm1pbmFsTm9kZS5nZXRDb250ZW50KCksXG4gICAgICAgICAgbWV0YVR5cGVOYW1lID0gbWV0YVR5cGVUZXJtaW5hbE5vZGVDb250ZW50OyAvLy9cblxuICByZXR1cm4gbWV0YVR5cGVOYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbWV0YXZhcmlhYmxlTmFtZUZyb21NZXRhdmFyaWFibGVOb2RlKG1ldGF2YXJpYWJsZU5vZGUpIHtcbiAgY29uc3QgbmFtZVRlcm1pbmFsTm9kZSA9IG5hbWVUZXJtaW5hbE5vZGVRdWVyeShtZXRhdmFyaWFibGVOb2RlKSxcbiAgICAgICAgbmFtZVRlcm1pbmFsTm9kZUNvbnRlbnQgPSBuYW1lVGVybWluYWxOb2RlLmdldENvbnRlbnQoKSxcbiAgICAgICAgbWV0YXZhcmlhYmxlTmFtZSA9IG5hbWVUZXJtaW5hbE5vZGVDb250ZW50OyAvLy9cblxuICByZXR1cm4gbWV0YXZhcmlhYmxlTmFtZTtcbn1cbiJdLCJuYW1lcyI6WyJtZXRhVHlwZU5hbWVGcm9tTWV0YVR5cGVOb2RlIiwibWV0YXZhcmlhYmxlTmFtZUZyb21NZXRhdmFyaWFibGVOb2RlIiwidHlwZU5hbWVGcm9tVHlwZU5vZGUiLCJ0eXBlVGVybWluYWxOb2RlUXVlcnkiLCJub2RlUXVlcnkiLCJuYW1lVGVybWluYWxOb2RlUXVlcnkiLCJtZXRhVHlwZVRlcm1pbmFsTm9kZVF1ZXJ5IiwidHlwZU5vZGUiLCJ0eXBlVGVybWluYWxOb2RlIiwidHlwZVRlcm1pbmFsTm9kZUNvbnRlbnQiLCJnZXRDb250ZW50IiwidHlwZU5hbWUiLCJtZXRhVHlwZU5vZGUiLCJtZXRhVHlwZVRlcm1pbmFsTm9kZSIsIm1ldGFUeXBlVGVybWluYWxOb2RlQ29udGVudCIsIm1ldGFUeXBlTmFtZSIsIm1ldGF2YXJpYWJsZU5vZGUiLCJuYW1lVGVybWluYWxOb2RlIiwibmFtZVRlcm1pbmFsTm9kZUNvbnRlbnQiLCJtZXRhdmFyaWFibGVOYW1lIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7SUFnQmdCQSw0QkFBNEI7ZUFBNUJBOztJQVFBQyxvQ0FBb0M7ZUFBcENBOztJQWhCQUMsb0JBQW9CO2VBQXBCQTs7O3FCQU5VO0FBRTFCLElBQU1DLHdCQUF3QkMsSUFBQUEsZ0JBQVMsRUFBQyxnQkFDbENDLHdCQUF3QkQsSUFBQUEsZ0JBQVMsRUFBQyx3QkFDbENFLDRCQUE0QkYsSUFBQUEsZ0JBQVMsRUFBQztBQUVyQyxTQUFTRixxQkFBcUJLLFFBQVE7SUFDM0MsSUFBTUMsbUJBQW1CTCxzQkFBc0JJLFdBQ3pDRSwwQkFBMEJELGlCQUFpQkUsVUFBVSxJQUNyREMsV0FBV0YseUJBQXlCLEdBQUc7SUFFN0MsT0FBT0U7QUFDVDtBQUVPLFNBQVNYLDZCQUE2QlksWUFBWTtJQUNyRCxJQUFNQyx1QkFBdUJQLDBCQUEwQk0sZUFDakRFLDhCQUE4QkQscUJBQXFCSCxVQUFVLElBQzdESyxlQUFlRCw2QkFBNkIsR0FBRztJQUV2RCxPQUFPQztBQUNUO0FBRU8sU0FBU2QscUNBQXFDZSxnQkFBZ0I7SUFDbkUsSUFBTUMsbUJBQW1CWixzQkFBc0JXLG1CQUN6Q0UsMEJBQTBCRCxpQkFBaUJQLFVBQVUsSUFDckRTLG1CQUFtQkQseUJBQXlCLEdBQUc7SUFFckQsT0FBT0M7QUFDVCJ9