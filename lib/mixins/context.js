"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
function trace(node, message) {
    this.context.trace(node, message);
}
function debug(node, message) {
    this.context.debug(node, message);
}
function info(node, message) {
    this.context.info(node, message);
}
function warning(node, message) {
    this.context.warning(node, message);
}
function error(node, message) {
    this.context.error(node, message);
}
function fatal(node, message) {
    this.context.fatal(node, message);
}
function getAxioms() {
    return this.context.getAxioms();
}
function getLemmas() {
    return this.context.getLemmas();
}
function getTheorems() {
    return this.context.getTheorems();
}
function getConjectures() {
    return this.context.getConjectures();
}
function getCombinators() {
    return this.context.getCombinators();
}
function getConstructors() {
    return this.context.getConstructors();
}
function findTypeByTypeName(typeName) {
    return this.context.findTypeByTypeName(typeName);
}
function findTypeByTypeNode(labelNode) {
    return this.context.findTypeByTypeNode(labelNode);
}
function findLabelByLabelNode(labelNode) {
    return this.context.findLabelByLabelNode(labelNode);
}
function findRuleByReferenceNode(referenceNode) {
    return this.context.findRuleByReferenceNode(referenceNode);
}
function findAxiomByReferenceNode(referenceNode) {
    return this.context.findAxiomByReferenceNode(referenceNode);
}
function findLemmaByReferenceNode(referenceNode) {
    return this.context.findLemmaByReferenceNode(referenceNode);
}
function findTheoremByReferenceNode(referenceNode) {
    return this.context.findTheoremByReferenceNode(referenceNode);
}
function findConjectureByReferenceNode(referenceNode) {
    return this.context.findConjectureByReferenceNode(referenceNode);
}
function isTypePresentByTypeName(typeName) {
    return this.context.isTypePresentByTypeName(typeName);
}
function isTypePresentByTypeNode(typeNode) {
    return this.context.isTypePresentByTypeNode(typeNode);
}
function isLabelPresentByLabelNode(labelNode) {
    return this.context.isLabelPresentByLabelNode(labelNode);
}
function nodeAsString(node) {
    return this.context.nodeAsString(node);
}
function nodesAsString(node) {
    return this.context.nodesAsString(node);
}
var contextMixins = {
    trace: trace,
    debug: debug,
    info: info,
    warning: warning,
    error: error,
    fatal: fatal,
    getAxioms: getAxioms,
    getLemmas: getLemmas,
    getTheorems: getTheorems,
    getConjectures: getConjectures,
    getCombinators: getCombinators,
    getConstructors: getConstructors,
    findTypeByTypeName: findTypeByTypeName,
    findTypeByTypeNode: findTypeByTypeNode,
    findLabelByLabelNode: findLabelByLabelNode,
    findRuleByReferenceNode: findRuleByReferenceNode,
    findAxiomByReferenceNode: findAxiomByReferenceNode,
    findLemmaByReferenceNode: findLemmaByReferenceNode,
    findTheoremByReferenceNode: findTheoremByReferenceNode,
    findConjectureByReferenceNode: findConjectureByReferenceNode,
    isTypePresentByTypeName: isTypePresentByTypeName,
    isTypePresentByTypeNode: isTypePresentByTypeNode,
    isLabelPresentByLabelNode: isLabelPresentByLabelNode,
    nodeAsString: nodeAsString,
    nodesAsString: nodesAsString
};
var _default = contextMixins;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvY29udGV4dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gdHJhY2Uobm9kZSwgbWVzc2FnZSkgeyB0aGlzLmNvbnRleHQudHJhY2Uobm9kZSwgbWVzc2FnZSk7IH1cblxuZnVuY3Rpb24gZGVidWcobm9kZSwgbWVzc2FnZSkgeyB0aGlzLmNvbnRleHQuZGVidWcobm9kZSwgbWVzc2FnZSk7IH1cblxuZnVuY3Rpb24gaW5mbyhub2RlLCBtZXNzYWdlKSB7IHRoaXMuY29udGV4dC5pbmZvKG5vZGUsIG1lc3NhZ2UpOyB9XG5cbmZ1bmN0aW9uIHdhcm5pbmcobm9kZSwgbWVzc2FnZSkgeyB0aGlzLmNvbnRleHQud2FybmluZyhub2RlLCBtZXNzYWdlKTsgfVxuXG5mdW5jdGlvbiBlcnJvcihub2RlLCBtZXNzYWdlKSB7IHRoaXMuY29udGV4dC5lcnJvcihub2RlLCBtZXNzYWdlKTsgfVxuXG5mdW5jdGlvbiBmYXRhbChub2RlLCBtZXNzYWdlKSB7IHRoaXMuY29udGV4dC5mYXRhbChub2RlLCBtZXNzYWdlKTsgfVxuXG5mdW5jdGlvbiBnZXRBeGlvbXMoKSB7IHJldHVybiB0aGlzLmNvbnRleHQuZ2V0QXhpb21zKCk7IH1cblxuZnVuY3Rpb24gZ2V0TGVtbWFzKCkgeyByZXR1cm4gdGhpcy5jb250ZXh0LmdldExlbW1hcygpOyB9XG5cbmZ1bmN0aW9uIGdldFRoZW9yZW1zKCkgeyByZXR1cm4gdGhpcy5jb250ZXh0LmdldFRoZW9yZW1zKCk7IH1cblxuZnVuY3Rpb24gZ2V0Q29uamVjdHVyZXMoKSB7IHJldHVybiB0aGlzLmNvbnRleHQuZ2V0Q29uamVjdHVyZXMoKTsgfVxuXG5mdW5jdGlvbiBnZXRDb21iaW5hdG9ycygpIHsgcmV0dXJuIHRoaXMuY29udGV4dC5nZXRDb21iaW5hdG9ycygpOyB9XG5cbmZ1bmN0aW9uIGdldENvbnN0cnVjdG9ycygpIHsgcmV0dXJuIHRoaXMuY29udGV4dC5nZXRDb25zdHJ1Y3RvcnMoKTsgfVxuXG5mdW5jdGlvbiBmaW5kVHlwZUJ5VHlwZU5hbWUodHlwZU5hbWUpIHsgcmV0dXJuIHRoaXMuY29udGV4dC5maW5kVHlwZUJ5VHlwZU5hbWUodHlwZU5hbWUpOyB9XG5cbmZ1bmN0aW9uIGZpbmRUeXBlQnlUeXBlTm9kZShsYWJlbE5vZGUpIHsgcmV0dXJuIHRoaXMuY29udGV4dC5maW5kVHlwZUJ5VHlwZU5vZGUobGFiZWxOb2RlKTsgfVxuXG5mdW5jdGlvbiBmaW5kTGFiZWxCeUxhYmVsTm9kZShsYWJlbE5vZGUpIHsgcmV0dXJuIHRoaXMuY29udGV4dC5maW5kTGFiZWxCeUxhYmVsTm9kZShsYWJlbE5vZGUpOyB9XG5cbmZ1bmN0aW9uIGZpbmRSdWxlQnlSZWZlcmVuY2VOb2RlKHJlZmVyZW5jZU5vZGUpIHsgcmV0dXJuIHRoaXMuY29udGV4dC5maW5kUnVsZUJ5UmVmZXJlbmNlTm9kZShyZWZlcmVuY2VOb2RlKTsgfVxuXG5mdW5jdGlvbiBmaW5kQXhpb21CeVJlZmVyZW5jZU5vZGUocmVmZXJlbmNlTm9kZSkgeyByZXR1cm4gdGhpcy5jb250ZXh0LmZpbmRBeGlvbUJ5UmVmZXJlbmNlTm9kZShyZWZlcmVuY2VOb2RlKTsgfVxuXG5mdW5jdGlvbiBmaW5kTGVtbWFCeVJlZmVyZW5jZU5vZGUocmVmZXJlbmNlTm9kZSkgeyByZXR1cm4gdGhpcy5jb250ZXh0LmZpbmRMZW1tYUJ5UmVmZXJlbmNlTm9kZShyZWZlcmVuY2VOb2RlKTsgfVxuXG5mdW5jdGlvbiBmaW5kVGhlb3JlbUJ5UmVmZXJlbmNlTm9kZShyZWZlcmVuY2VOb2RlKSB7IHJldHVybiB0aGlzLmNvbnRleHQuZmluZFRoZW9yZW1CeVJlZmVyZW5jZU5vZGUocmVmZXJlbmNlTm9kZSk7IH1cblxuZnVuY3Rpb24gZmluZENvbmplY3R1cmVCeVJlZmVyZW5jZU5vZGUocmVmZXJlbmNlTm9kZSkgeyByZXR1cm4gdGhpcy5jb250ZXh0LmZpbmRDb25qZWN0dXJlQnlSZWZlcmVuY2VOb2RlKHJlZmVyZW5jZU5vZGUpOyB9XG5cbmZ1bmN0aW9uIGlzVHlwZVByZXNlbnRCeVR5cGVOYW1lKHR5cGVOYW1lKSB7IHJldHVybiB0aGlzLmNvbnRleHQuaXNUeXBlUHJlc2VudEJ5VHlwZU5hbWUodHlwZU5hbWUpOyB9XG5cbmZ1bmN0aW9uIGlzVHlwZVByZXNlbnRCeVR5cGVOb2RlKHR5cGVOb2RlKSB7IHJldHVybiB0aGlzLmNvbnRleHQuaXNUeXBlUHJlc2VudEJ5VHlwZU5vZGUodHlwZU5vZGUpOyB9XG5cbmZ1bmN0aW9uIGlzTGFiZWxQcmVzZW50QnlMYWJlbE5vZGUobGFiZWxOb2RlKSB7IHJldHVybiB0aGlzLmNvbnRleHQuaXNMYWJlbFByZXNlbnRCeUxhYmVsTm9kZShsYWJlbE5vZGUpOyB9XG5cbmZ1bmN0aW9uIG5vZGVBc1N0cmluZyhub2RlKSB7IHJldHVybiB0aGlzLmNvbnRleHQubm9kZUFzU3RyaW5nKG5vZGUpOyB9XG5cbmZ1bmN0aW9uIG5vZGVzQXNTdHJpbmcobm9kZSkgeyByZXR1cm4gdGhpcy5jb250ZXh0Lm5vZGVzQXNTdHJpbmcobm9kZSk7IH1cblxuY29uc3QgY29udGV4dE1peGlucyA9IHtcbiAgdHJhY2UsXG4gIGRlYnVnLFxuICBpbmZvLFxuICB3YXJuaW5nLFxuICBlcnJvcixcbiAgZmF0YWwsXG4gIGdldEF4aW9tcyxcbiAgZ2V0TGVtbWFzLFxuICBnZXRUaGVvcmVtcyxcbiAgZ2V0Q29uamVjdHVyZXMsXG4gIGdldENvbWJpbmF0b3JzLFxuICBnZXRDb25zdHJ1Y3RvcnMsXG4gIGZpbmRUeXBlQnlUeXBlTmFtZSxcbiAgZmluZFR5cGVCeVR5cGVOb2RlLFxuICBmaW5kTGFiZWxCeUxhYmVsTm9kZSxcbiAgZmluZFJ1bGVCeVJlZmVyZW5jZU5vZGUsXG4gIGZpbmRBeGlvbUJ5UmVmZXJlbmNlTm9kZSxcbiAgZmluZExlbW1hQnlSZWZlcmVuY2VOb2RlLFxuICBmaW5kVGhlb3JlbUJ5UmVmZXJlbmNlTm9kZSxcbiAgZmluZENvbmplY3R1cmVCeVJlZmVyZW5jZU5vZGUsXG4gIGlzVHlwZVByZXNlbnRCeVR5cGVOYW1lLFxuICBpc1R5cGVQcmVzZW50QnlUeXBlTm9kZSxcbiAgaXNMYWJlbFByZXNlbnRCeUxhYmVsTm9kZSxcbiAgbm9kZUFzU3RyaW5nLFxuICBub2Rlc0FzU3RyaW5nXG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb250ZXh0TWl4aW5zO1xuIl0sIm5hbWVzIjpbInRyYWNlIiwibm9kZSIsIm1lc3NhZ2UiLCJjb250ZXh0IiwiZGVidWciLCJpbmZvIiwid2FybmluZyIsImVycm9yIiwiZmF0YWwiLCJnZXRBeGlvbXMiLCJnZXRMZW1tYXMiLCJnZXRUaGVvcmVtcyIsImdldENvbmplY3R1cmVzIiwiZ2V0Q29tYmluYXRvcnMiLCJnZXRDb25zdHJ1Y3RvcnMiLCJmaW5kVHlwZUJ5VHlwZU5hbWUiLCJ0eXBlTmFtZSIsImZpbmRUeXBlQnlUeXBlTm9kZSIsImxhYmVsTm9kZSIsImZpbmRMYWJlbEJ5TGFiZWxOb2RlIiwiZmluZFJ1bGVCeVJlZmVyZW5jZU5vZGUiLCJyZWZlcmVuY2VOb2RlIiwiZmluZEF4aW9tQnlSZWZlcmVuY2VOb2RlIiwiZmluZExlbW1hQnlSZWZlcmVuY2VOb2RlIiwiZmluZFRoZW9yZW1CeVJlZmVyZW5jZU5vZGUiLCJmaW5kQ29uamVjdHVyZUJ5UmVmZXJlbmNlTm9kZSIsImlzVHlwZVByZXNlbnRCeVR5cGVOYW1lIiwiaXNUeXBlUHJlc2VudEJ5VHlwZU5vZGUiLCJ0eXBlTm9kZSIsImlzTGFiZWxQcmVzZW50QnlMYWJlbE5vZGUiLCJub2RlQXNTdHJpbmciLCJub2Rlc0FzU3RyaW5nIiwiY29udGV4dE1peGlucyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7K0JBZ0ZBOzs7ZUFBQTs7O0FBOUVBLFNBQVNBLE1BQU1DLElBQUksRUFBRUMsT0FBTztJQUFJLElBQUksQ0FBQ0MsT0FBTyxDQUFDSCxLQUFLLENBQUNDLE1BQU1DO0FBQVU7QUFFbkUsU0FBU0UsTUFBTUgsSUFBSSxFQUFFQyxPQUFPO0lBQUksSUFBSSxDQUFDQyxPQUFPLENBQUND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