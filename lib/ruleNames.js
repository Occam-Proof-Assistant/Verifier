"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    TERM_RULE_NAME: function() {
        return TERM_RULE_NAME;
    },
    TYPE_RULE_NAME: function() {
        return TYPE_RULE_NAME;
    },
    LABEL_RULE_NAME: function() {
        return LABEL_RULE_NAME;
    },
    ARGUMENT_RULE_NAME: function() {
        return ARGUMENT_RULE_NAME;
    },
    METAVARIABLE_RULE_NAME: function() {
        return METAVARIABLE_RULE_NAME;
    },
    METASTATEMENT_RULE_NAME: function() {
        return METASTATEMENT_RULE_NAME;
    },
    META_SUBPROOF_RULE_NAME: function() {
        return META_SUBPROOF_RULE_NAME;
    },
    UNQUALIFIED_STATEMENT_RULE_NAME: function() {
        return UNQUALIFIED_STATEMENT_RULE_NAME;
    },
    CONDITIONAL_INDICATIVE_RULE_NAME: function() {
        return CONDITIONAL_INDICATIVE_RULE_NAME;
    },
    COMBINATOR_DECLARATION_RULE_NAME: function() {
        return COMBINATOR_DECLARATION_RULE_NAME;
    },
    CONSTRUCTOR_DECLARATION_RULE_NAME: function() {
        return CONSTRUCTOR_DECLARATION_RULE_NAME;
    },
    QUALIFIED_METASTATEMENT_RULE_NAME: function() {
        return QUALIFIED_METASTATEMENT_RULE_NAME;
    },
    UNQUALIFIED_METASTATEMENT_RULE_NAME: function() {
        return UNQUALIFIED_METASTATEMENT_RULE_NAME;
    }
});
var TERM_RULE_NAME = "term";
var TYPE_RULE_NAME = "type";
var LABEL_RULE_NAME = "label";
var ARGUMENT_RULE_NAME = "argument";
var METAVARIABLE_RULE_NAME = "metavariable";
var METASTATEMENT_RULE_NAME = "metastatement";
var META_SUBPROOF_RULE_NAME = "metaSubproof";
var UNQUALIFIED_STATEMENT_RULE_NAME = "unqualifiedStatement";
var CONDITIONAL_INDICATIVE_RULE_NAME = "conditionalIndicative";
var COMBINATOR_DECLARATION_RULE_NAME = "combinatorDeclaration";
var CONSTRUCTOR_DECLARATION_RULE_NAME = "constructorDeclaration";
var QUALIFIED_METASTATEMENT_RULE_NAME = "qualifiedMetastatement";
var UNQUALIFIED_METASTATEMENT_RULE_NAME = "unqualifiedMetastatement";

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9ydWxlTmFtZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCBjb25zdCBURVJNX1JVTEVfTkFNRSA9IFwidGVybVwiO1xuZXhwb3J0IGNvbnN0IFRZUEVfUlVMRV9OQU1FID0gXCJ0eXBlXCI7XG5leHBvcnQgY29uc3QgTEFCRUxfUlVMRV9OQU1FID0gXCJsYWJlbFwiO1xuZXhwb3J0IGNvbnN0IEFSR1VNRU5UX1JVTEVfTkFNRSA9IFwiYXJndW1lbnRcIjtcbmV4cG9ydCBjb25zdCBNRVRBVkFSSUFCTEVfUlVMRV9OQU1FID0gXCJtZXRhdmFyaWFibGVcIjtcbmV4cG9ydCBjb25zdCBNRVRBU1RBVEVNRU5UX1JVTEVfTkFNRSA9IFwibWV0YXN0YXRlbWVudFwiO1xuZXhwb3J0IGNvbnN0IE1FVEFfU1VCUFJPT0ZfUlVMRV9OQU1FID0gXCJtZXRhU3VicHJvb2ZcIjtcbmV4cG9ydCBjb25zdCBVTlFVQUxJRklFRF9TVEFURU1FTlRfUlVMRV9OQU1FID0gXCJ1bnF1YWxpZmllZFN0YXRlbWVudFwiO1xuZXhwb3J0IGNvbnN0IENPTkRJVElPTkFMX0lORElDQVRJVkVfUlVMRV9OQU1FID0gXCJjb25kaXRpb25hbEluZGljYXRpdmVcIjtcbmV4cG9ydCBjb25zdCBDT01CSU5BVE9SX0RFQ0xBUkFUSU9OX1JVTEVfTkFNRSA9IFwiY29tYmluYXRvckRlY2xhcmF0aW9uXCI7XG5leHBvcnQgY29uc3QgQ09OU1RSVUNUT1JfREVDTEFSQVRJT05fUlVMRV9OQU1FID0gXCJjb25zdHJ1Y3RvckRlY2xhcmF0aW9uXCI7XG5leHBvcnQgY29uc3QgUVVBTElGSUVEX01FVEFTVEFURU1FTlRfUlVMRV9OQU1FID0gXCJxdWFsaWZpZWRNZXRhc3RhdGVtZW50XCI7XG5leHBvcnQgY29uc3QgVU5RVUFMSUZJRURfTUVUQVNUQVRFTUVOVF9SVUxFX05BTUUgPSBcInVucXVhbGlmaWVkTWV0YXN0YXRlbWVudFwiO1xuIl0sIm5hbWVzIjpbIlRFUk1fUlVMRV9OQU1FIiwiVFlQRV9SVUxFX05BTUUiLCJMQUJFTF9SVUxFX05BTUUiLCJBUkdVTUVOVF9SVUxFX05BTUUiLCJNRVRBVkFSSUFCTEVfUlVMRV9OQU1FIiwiTUVUQVNUQVRFTUVOVF9SVUxFX05BTUUiLCJNRVRBX1NVQlBST09GX1JVTEVfTkFNRSIsIlVOUVVBTElGSUVEX1NUQVRFTUVOVF9SVUxFX05BTUUiLCJDT05ESVRJT05BTF9JTkRJQ0FUSVZFX1JVTEVfTkFNRSIsIkNPTUJJTkFUT1JfREVDTEFSQVRJT05fUlVMRV9OQU1FIiwiQ09OU1RSVUNUT1JfREVDTEFSQVRJT05fUlVMRV9OQU1FIiwiUVVBTElGSUVEX01FVEFTVEFURU1FTlRfUlVMRV9OQU1FIiwiVU5RVUFMSUZJRURfTUVUQVNUQVRFTUVOVF9SVUxFX05BTUUiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztJQUVhQSxjQUFjO2VBQWRBOztJQUNBQyxjQUFjO2VBQWRBOztJQUNBQyxlQUFlO2VBQWZBOztJQUNBQyxrQkFBa0I7ZUFBbEJBOztJQUNBQyxzQkFBc0I7ZUFBdEJBOztJQUNBQyx1QkFBdUI7ZUFBdkJBOztJQUNBQyx1QkFBdUI7ZUFBdkJBOztJQUNBQywrQkFBK0I7ZUFBL0JBOztJQUNBQyxnQ0FBZ0M7ZUFBaENBOztJQUNBQyxnQ0FBZ0M7ZUFBaENBOztJQUNBQyxpQ0FBaUM7ZUFBakNBOztJQUNBQyxpQ0FBaUM7ZUFBakNBOztJQUNBQyxtQ0FBbUM7ZUFBbkNBOzs7QUFaTixJQUFNWixpQkFBaUI7QUFDdkIsSUFBTUMsaUJBQWlCO0FBQ3ZCLElBQU1DLGtCQUFrQjtBQUN4QixJQUFNQyxxQkFBcUI7QUFDM0IsSUFBTUMseUJBQXlCO0FBQy9CLElBQU1DLDBCQUEwQjtBQUNoQyxJQUFNQywwQkFBMEI7QUFDaEMsSUFBTUMsa0NBQWtDO0FBQ3hDLElBQU1DLG1DQUFtQztBQUN6QyxJQUFNQyxtQ0FBbUM7QUFDekMsSUFBTUMsb0NBQW9DO0FBQzFDLElBQU1DLG9DQUFvQztBQUMxQyxJQUFNQyxzQ0FBc0MifQ==