"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    TERM_RULE_NAME: function() {
        return TERM_RULE_NAME;
    },
    TYPE_RULE_NAME: function() {
        return TYPE_RULE_NAME;
    },
    LABEL_RULE_NAME: function() {
        return LABEL_RULE_NAME;
    },
    ARGUMENT_RULE_NAME: function() {
        return ARGUMENT_RULE_NAME;
    },
    SUBPROOF_RULE_NAME: function() {
        return SUBPROOF_RULE_NAME;
    },
    VARIABLE_RULE_NAME: function() {
        return VARIABLE_RULE_NAME;
    },
    STATEMENT_RULE_NAME: function() {
        return STATEMENT_RULE_NAME;
    },
    METAVARIABLE_RULE_NAME: function() {
        return METAVARIABLE_RULE_NAME;
    },
    METASTATEMENT_RULE_NAME: function() {
        return METASTATEMENT_RULE_NAME;
    },
    RULE_SUBPROOF_RULE_NAME: function() {
        return RULE_SUBPROOF_RULE_NAME;
    },
    META_ARGUMENT_RULE_NAME: function() {
        return META_ARGUMENT_RULE_NAME;
    },
    QUALIFIED_STATEMENT_RULE_NAME: function() {
        return QUALIFIED_STATEMENT_RULE_NAME;
    },
    UNQUALIFIED_STATEMENT_RULE_NAME: function() {
        return UNQUALIFIED_STATEMENT_RULE_NAME;
    },
    CONSTRUCTOR_DECLARATIONRULE_NAME: function() {
        return CONSTRUCTOR_DECLARATIONRULE_NAME;
    },
    QUALIFIED_METASTATEMENT_RULE_NAME: function() {
        return QUALIFIED_METASTATEMENT_RULE_NAME;
    },
    UNQUALIFIED_METASTATEMENT_RULE_NAME: function() {
        return UNQUALIFIED_METASTATEMENT_RULE_NAME;
    }
});
var TERM_RULE_NAME = "term";
var TYPE_RULE_NAME = "type";
var LABEL_RULE_NAME = "label";
var ARGUMENT_RULE_NAME = "argument";
var SUBPROOF_RULE_NAME = "subproof";
var VARIABLE_RULE_NAME = "variable";
var STATEMENT_RULE_NAME = "statement";
var METAVARIABLE_RULE_NAME = "metavariable";
var METASTATEMENT_RULE_NAME = "metastatement";
var RULE_SUBPROOF_RULE_NAME = "ruleSubproof";
var META_ARGUMENT_RULE_NAME = "metaArgument";
var QUALIFIED_STATEMENT_RULE_NAME = "qualifiedStatement";
var UNQUALIFIED_STATEMENT_RULE_NAME = "unqualifiedStatement";
var CONSTRUCTOR_DECLARATIONRULE_NAME = "constructorDeclaration";
var QUALIFIED_METASTATEMENT_RULE_NAME = "qualifiedMetastatement";
var UNQUALIFIED_METASTATEMENT_RULE_NAME = "unqualifiedMetastatement";

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9ydWxlTmFtZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCBjb25zdCBURVJNX1JVTEVfTkFNRSA9IFwidGVybVwiO1xuZXhwb3J0IGNvbnN0IFRZUEVfUlVMRV9OQU1FID0gXCJ0eXBlXCI7XG5leHBvcnQgY29uc3QgTEFCRUxfUlVMRV9OQU1FID0gXCJsYWJlbFwiO1xuZXhwb3J0IGNvbnN0IEFSR1VNRU5UX1JVTEVfTkFNRSA9IFwiYXJndW1lbnRcIjtcbmV4cG9ydCBjb25zdCBTVUJQUk9PRl9SVUxFX05BTUUgPSBcInN1YnByb29mXCI7XG5leHBvcnQgY29uc3QgVkFSSUFCTEVfUlVMRV9OQU1FID0gXCJ2YXJpYWJsZVwiO1xuZXhwb3J0IGNvbnN0IFNUQVRFTUVOVF9SVUxFX05BTUUgPSBcInN0YXRlbWVudFwiO1xuZXhwb3J0IGNvbnN0IE1FVEFWQVJJQUJMRV9SVUxFX05BTUUgPSBcIm1ldGF2YXJpYWJsZVwiO1xuZXhwb3J0IGNvbnN0IE1FVEFTVEFURU1FTlRfUlVMRV9OQU1FID0gXCJtZXRhc3RhdGVtZW50XCI7XG5leHBvcnQgY29uc3QgUlVMRV9TVUJQUk9PRl9SVUxFX05BTUUgPSBcInJ1bGVTdWJwcm9vZlwiO1xuZXhwb3J0IGNvbnN0IE1FVEFfQVJHVU1FTlRfUlVMRV9OQU1FID0gXCJtZXRhQXJndW1lbnRcIjtcbmV4cG9ydCBjb25zdCBRVUFMSUZJRURfU1RBVEVNRU5UX1JVTEVfTkFNRSA9IFwicXVhbGlmaWVkU3RhdGVtZW50XCI7XG5leHBvcnQgY29uc3QgVU5RVUFMSUZJRURfU1RBVEVNRU5UX1JVTEVfTkFNRSA9IFwidW5xdWFsaWZpZWRTdGF0ZW1lbnRcIjtcbmV4cG9ydCBjb25zdCBDT05TVFJVQ1RPUl9ERUNMQVJBVElPTlJVTEVfTkFNRSA9IFwiY29uc3RydWN0b3JEZWNsYXJhdGlvblwiO1xuZXhwb3J0IGNvbnN0IFFVQUxJRklFRF9NRVRBU1RBVEVNRU5UX1JVTEVfTkFNRSA9IFwicXVhbGlmaWVkTWV0YXN0YXRlbWVudFwiO1xuZXhwb3J0IGNvbnN0IFVOUVVBTElGSUVEX01FVEFTVEFURU1FTlRfUlVMRV9OQU1FID0gXCJ1bnF1YWxpZmllZE1ldGFzdGF0ZW1lbnRcIjtcbiJdLCJuYW1lcyI6WyJURVJNX1JVTEVfTkFNRSIsIlRZUEVfUlVMRV9OQU1FIiwiTEFCRUxfUlVMRV9OQU1FIiwiQVJHVU1FTlRfUlVMRV9OQU1FIiwiU1VCUFJPT0ZfUlVMRV9OQU1FIiwiVkFSSUFCTEVfUlVMRV9OQU1FIiwiU1RBVEVNRU5UX1JVTEVfTkFNRSIsIk1FVEFWQVJJQUJMRV9SVUxFX05BTUUiLCJNRVRBU1RBVEVNRU5UX1JVTEVfTkFNRSIsIlJVTEVfU1VCUFJPT0ZfUlVMRV9OQU1FIiwiTUVUQV9BUkdVTUVOVF9SVUxFX05BTUUiLCJRVUFMSUZJRURfU1RBVEVNRU5UX1JVTEVfTkFNRSIsIlVOUVVBTElGSUVEX1NUQVRFTUVOVF9SVUxFX05BTUUiLCJDT05TVFJVQ1RPUl9ERUNMQVJBVElPTlJVTEVfTkFNRSIsIlFVQUxJRklFRF9NRVRBU1RBVEVNRU5UX1JVTEVfTkFNRSIsIlVOUVVBTElGSUVEX01FVEFTVEFURU1FTlRfUlVMRV9OQU1FIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7SUFFYUEsY0FBYztlQUFkQTs7SUFDQUMsY0FBYztlQUFkQTs7SUFDQUMsZUFBZTtlQUFmQTs7SUFDQUMsa0JBQWtCO2VBQWxCQTs7SUFDQUMsa0JBQWtCO2VBQWxCQTs7SUFDQUMsa0JBQWtCO2VBQWxCQTs7SUFDQUMsbUJBQW1CO2VBQW5CQTs7SUFDQUMsc0JBQXNCO2VBQXRCQTs7SUFDQUMsdUJBQXVCO2VBQXZCQTs7SUFDQUMsdUJBQXVCO2VBQXZCQTs7SUFDQUMsdUJBQXVCO2VBQXZCQTs7SUFDQUMsNkJBQTZCO2VBQTdCQTs7SUFDQUMsK0JBQStCO2VBQS9CQTs7SUFDQUMsZ0NBQWdDO2VBQWhDQTs7SUFDQUMsaUNBQWlDO2VBQWpDQTs7SUFDQUMsbUNBQW1DO2VBQW5DQTs7O0FBZk4sSUFBTWYsaUJBQWlCO0FBQ3ZCLElBQU1DLGlCQUFpQjtBQUN2QixJQUFNQyxrQkFBa0I7QUFDeEIsSUFBTUMscUJBQXFCO0FBQzNCLElBQU1DLHFCQUFxQjtBQUMzQixJQUFNQyxxQkFBcUI7QUFDM0IsSUFBTUMsc0JBQXNCO0FBQzVCLElBQU1DLHlCQUF5QjtBQUMvQixJQUFNQywwQkFBMEI7QUFDaEMsSUFBTUMsMEJBQTBCO0FBQ2hDLElBQU1DLDBCQUEwQjtBQUNoQyxJQUFNQyxnQ0FBZ0M7QUFDdEMsSUFBTUMsa0NBQWtDO0FBQ3hDLElBQU1DLG1DQUFtQztBQUN6QyxJQUFNQyxvQ0FBb0M7QUFDMUMsSUFBTUMsc0NBQXNDIn0=